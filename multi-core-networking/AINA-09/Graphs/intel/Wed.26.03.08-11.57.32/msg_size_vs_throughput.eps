%!PS-Adobe-2.0
%%Title: Wed.26.03.08-11.57.32/msg_size_vs_throughput.eps
%%Creator: gnuplot 4.2 patchlevel 0
%%CreationDate: Fri Mar 28 13:08:10 2008
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (Wed.26.03.08-11.57.32/msg_size_vs_throughput.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 0)
  /Author (Matthew Faulkner,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Fri Mar 28 13:08:10 2008)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
714 419 M
6248 0 V
stroke
LTb
714 419 M
63 0 V
6185 0 R
-63 0 V
630 419 M
( 0) Rshow
1.000 UL
LTb
1.000 UL
LTa
714 1388 M
6248 0 V
stroke
LTb
714 1388 M
63 0 V
6185 0 R
-63 0 V
-6269 0 R
( 50) Rshow
1.000 UL
LTb
1.000 UL
LTa
714 2356 M
6248 0 V
stroke
LTb
714 2356 M
63 0 V
6185 0 R
-63 0 V
-6269 0 R
( 100) Rshow
1.000 UL
LTb
1.000 UL
LTa
714 3325 M
6248 0 V
stroke
LTb
714 3325 M
63 0 V
6185 0 R
-63 0 V
-6269 0 R
( 150) Rshow
1.000 UL
LTb
1.000 UL
LTa
714 4294 M
6248 0 V
stroke
LTb
714 4294 M
63 0 V
6185 0 R
-63 0 V
-6269 0 R
( 200) Rshow
1.000 UL
LTb
1.000 UL
LTa
714 420 M
0 4452 V
stroke
LTb
714 420 M
0 63 V
0 4389 R
0 -63 V
714 280 M
( 1) Cshow
1.000 UL
LTb
1105 420 M
0 31 V
0 4421 R
0 -31 V
1621 420 M
0 31 V
0 4421 R
0 -31 V
1886 420 M
0 31 V
0 4421 R
0 -31 V
stroke
LTa
2011 420 M
0 4452 V
stroke
LTb
2011 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
( 10) Cshow
1.000 UL
LTb
2402 420 M
0 31 V
0 4421 R
0 -31 V
2918 420 M
0 31 V
0 4421 R
0 -31 V
3183 420 M
0 31 V
0 4421 R
0 -31 V
stroke
LTa
3308 420 M
0 4452 V
stroke
LTb
3308 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
( 100) Cshow
1.000 UL
LTb
3699 420 M
0 31 V
0 4421 R
0 -31 V
4215 420 M
0 31 V
0 4421 R
0 -31 V
4480 420 M
0 31 V
0 4421 R
0 -31 V
stroke
LTa
4606 420 M
0 4452 V
stroke
LTb
4606 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
( 1000) Cshow
1.000 UL
LTb
4996 420 M
0 31 V
0 4421 R
0 -31 V
5512 420 M
0 31 V
0 4421 R
0 -31 V
5777 420 M
0 31 V
0 4421 R
0 -31 V
stroke
LTa
5903 420 M
0 63 V
0 560 R
0 3829 V
stroke
LTb
5903 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
( 10000) Cshow
1.000 UL
LTb
6293 420 M
0 31 V
0 4421 R
0 -31 V
6810 420 M
0 31 V
0 4421 R
0 -31 V
stroke
714 4872 N
714 420 L
6248 0 V
0 4452 V
-6248 0 V
Z stroke
LCb setrgbcolor
140 2646 M
currentpoint gsave translate 90 rotate 0 0 M
(Thoughput \(MBps\)) Cshow
grestore
LTb
LCb setrgbcolor
3838 70 M
(Message Size \(bytes\)) Cshow
LTb
1.000 UP
1.000 UL
LTb
1.000 UL
LT0
714 422 M
619 7 V
477 12 V
430 0 V
409 12 V
399 28 V
395 69 V
393 138 V
391 219 V
391 495 V
391 362 V
391 518 V
390 545 V
391 297 V
390 335 V
391 154 V
stroke
LT1
714 421 M
619 4 V
477 9 V
430 10 V
409 28 V
399 48 V
395 70 V
393 159 V
391 311 V
391 554 V
391 342 V
391 572 V
390 218 V
391 160 V
390 175 V
391 68 V
stroke
LT2
714 423 M
619 6 V
477 17 V
430 15 V
409 59 V
399 107 V
395 87 V
393 208 V
391 501 V
391 517 V
391 411 V
391 1019 V
390 227 V
391 285 V
390 326 V
391 95 V
stroke
LT3
714 422 M
619 4 V
477 10 V
430 17 V
409 27 V
399 51 V
395 86 V
393 159 V
391 332 V
391 570 V
391 390 V
391 625 V
390 204 V
391 205 V
390 190 V
391 82 V
stroke
LT0
LTb
6311 973 M
(Same core) Rshow
LT0
6395 973 M
399 0 V
-399 31 R
0 -62 V
399 62 R
0 -62 V
714 422 M
0 1 V
-31 -1 R
62 0 V
-62 1 R
62 0 V
588 4 R
0 3 V
-31 -3 R
62 0 V
-62 3 R
62 0 V
446 8 R
0 7 V
-31 -7 R
62 0 V
-62 7 R
62 0 V
399 -15 R
0 21 V
-31 -21 R
62 0 V
-62 21 R
62 0 V
378 -8 R
0 20 V
-31 -20 R
62 0 V
-62 20 R
62 0 V
368 9 R
0 18 V
-31 -18 R
62 0 V
-62 18 R
62 0 V
364 36 R
0 47 V
-31 -47 R
62 0 V
-62 47 R
62 0 V
362 76 R
0 79 V
-31 -79 R
62 0 V
-62 79 R
62 0 V
360 110 R
0 137 V
4196 838 M
62 0 V
-62 137 R
62 0 V
360 282 R
0 291 V
-31 -291 R
62 0 V
-62 291 R
62 0 V
360 -18 R
0 467 V
-31 -467 R
62 0 V
-62 467 R
62 0 V
360 -49 R
0 668 V
-31 -668 R
62 0 V
-62 668 R
62 0 V
359 -204 R
0 830 V
-31 -830 R
62 0 V
-62 830 R
62 0 V
360 -563 R
0 890 V
-31 -890 R
62 0 V
-62 890 R
62 0 V
359 -534 R
0 849 V
-31 -849 R
62 0 V
-62 849 R
62 0 V
360 -652 R
0 762 V
-31 -762 R
62 0 V
-62 762 R
62 0 V
714 422 Pls
1333 429 Pls
1810 441 Pls
2240 441 Pls
2649 453 Pls
3048 481 Pls
3443 550 Pls
3836 688 Pls
4227 907 Pls
4618 1402 Pls
5009 1764 Pls
5400 2282 Pls
5790 2827 Pls
6181 3124 Pls
6571 3459 Pls
6962 3613 Pls
6594 973 Pls
1.000 UL
LT1
LTb
6311 833 M
(Same computer) Rshow
LT1
6395 833 M
399 0 V
-399 31 R
0 -62 V
399 62 R
0 -62 V
714 420 M
0 3 V
-31 -3 R
62 0 V
-62 3 R
62 0 V
588 -2 R
0 8 V
-31 -8 R
62 0 V
-62 8 R
62 0 V
446 -4 R
0 19 V
-31 -19 R
62 0 V
-62 19 R
62 0 V
399 -14 R
0 28 V
-31 -28 R
62 0 V
-62 28 R
62 0 V
378 -16 R
0 59 V
-31 -59 R
62 0 V
-62 59 R
62 0 V
368 -27 R
0 93 V
-31 -93 R
62 0 V
-62 93 R
62 0 V
364 -5 R
0 55 V
-31 -55 R
62 0 V
-62 55 R
62 0 V
362 75 R
0 114 V
3805 692 M
62 0 V
-62 114 R
62 0 V
360 141 R
0 227 V
4196 947 M
62 0 V
-62 227 R
62 0 V
360 242 R
0 396 V
-31 -396 R
62 0 V
-62 396 R
62 0 V
360 -109 R
0 507 V
-31 -507 R
62 0 V
-62 507 R
62 0 V
360 -36 R
0 707 V
-31 -707 R
62 0 V
-62 707 R
62 0 V
359 -498 R
0 727 V
-31 -727 R
62 0 V
-62 727 R
62 0 V
360 -595 R
0 783 V
-31 -783 R
62 0 V
-62 783 R
62 0 V
359 -633 R
0 832 V
-31 -832 R
62 0 V
-62 832 R
62 0 V
360 -705 R
0 714 V
-31 -714 R
62 0 V
-62 714 R
62 0 V
714 421 Crs
1333 425 Crs
1810 434 Crs
2240 444 Crs
2649 472 Crs
3048 520 Crs
3443 590 Crs
3836 749 Crs
4227 1060 Crs
4618 1614 Crs
5009 1956 Crs
5400 2528 Crs
5790 2746 Crs
6181 2906 Crs
6571 3081 Crs
6962 3149 Crs
6594 833 Crs
1.000 UL
LT2
LTb
6311 693 M
(Same die) Rshow
LT2
6395 693 M
399 0 V
-399 31 R
0 -62 V
399 62 R
0 -62 V
714 421 M
0 4 V
-31 -4 R
62 0 V
-62 4 R
62 0 V
588 -1 R
0 10 V
-31 -10 R
62 0 V
-62 10 R
62 0 V
446 1 R
0 21 V
-31 -21 R
62 0 V
-62 21 R
62 0 V
399 -13 R
0 36 V
-31 -36 R
62 0 V
-62 36 R
62 0 V
378 1 R
0 81 V
-31 -81 R
62 0 V
-62 81 R
62 0 V
368 -16 R
0 164 V
3017 545 M
62 0 V
-62 164 R
62 0 V
364 -75 R
0 160 V
3412 634 M
62 0 V
-62 160 R
62 0 V
362 12 R
0 232 V
3805 806 M
62 0 V
-62 232 R
62 0 V
360 162 R
0 447 V
-31 -447 R
62 0 V
-62 447 R
62 0 V
360 59 R
0 469 V
-31 -469 R
62 0 V
-62 469 R
62 0 V
360 -98 R
0 549 V
-31 -549 R
62 0 V
-62 549 R
62 0 V
360 229 R
0 1029 V
5369 2855 M
62 0 V
-62 1029 R
62 0 V
359 -779 R
0 984 V
-31 -984 R
62 0 V
-62 984 R
62 0 V
360 -761 R
0 1107 V
6150 3328 M
62 0 V
-62 1107 R
62 0 V
359 -863 R
0 1272 V
6540 3572 M
62 0 V
-62 1272 R
62 0 V
6962 3734 M
0 1138 V
6931 3734 M
62 0 V
-62 1138 R
62 0 V
714 423 Star
1333 429 Star
1810 446 Star
2240 461 Star
2649 520 Star
3048 627 Star
3443 714 Star
3836 922 Star
4227 1423 Star
4618 1940 Star
5009 2351 Star
5400 3370 Star
5790 3597 Star
6181 3882 Star
6571 4208 Star
6962 4303 Star
6594 693 Star
1.000 UL
LT3
LTb
6311 553 M
(Same processor) Rshow
LT3
6395 553 M
399 0 V
-399 31 R
0 -62 V
399 62 R
0 -62 V
714 420 M
0 4 V
-31 -4 R
62 0 V
-62 4 R
62 0 V
588 -2 R
0 9 V
-31 -9 R
62 0 V
-62 9 R
62 0 V
446 -5 R
0 20 V
-31 -20 R
62 0 V
-62 20 R
62 0 V
399 -13 R
0 40 V
-31 -40 R
62 0 V
-62 40 R
62 0 V
378 -25 R
0 64 V
-31 -64 R
62 0 V
-62 64 R
62 0 V
368 -29 R
0 97 V
-31 -97 R
62 0 V
-62 97 R
62 0 V
364 -13 R
0 100 V
3412 567 M
62 0 V
-62 100 R
62 0 V
362 45 R
0 128 V
3805 712 M
62 0 V
-62 128 R
62 0 V
360 146 R
0 245 V
4196 986 M
62 0 V
-62 245 R
62 0 V
360 243 R
0 408 V
-31 -408 R
62 0 V
-62 408 R
62 0 V
360 -103 R
0 578 V
-31 -578 R
62 0 V
-62 578 R
62 0 V
360 -60 R
0 791 V
-31 -791 R
62 0 V
-62 791 R
62 0 V
359 -559 R
0 737 V
-31 -737 R
62 0 V
-62 737 R
62 0 V
360 -590 R
0 853 V
-31 -853 R
62 0 V
-62 853 R
62 0 V
359 -703 R
0 931 V
-31 -931 R
62 0 V
-62 931 R
62 0 V
360 -767 R
0 768 V
-31 -768 R
62 0 V
-62 768 R
62 0 V
714 422 Box
1333 426 Box
1810 436 Box
2240 453 Box
2649 480 Box
3048 531 Box
3443 617 Box
3836 776 Box
4227 1108 Box
4618 1678 Box
5009 2068 Box
5400 2693 Box
5790 2897 Box
6181 3102 Box
6571 3292 Box
6962 3374 Box
6594 553 Box
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
