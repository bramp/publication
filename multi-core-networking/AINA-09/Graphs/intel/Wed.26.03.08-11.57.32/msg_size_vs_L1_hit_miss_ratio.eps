%!PS-Adobe-2.0
%%Title: Wed.26.03.08-11.57.32/msg_size_vs_L1_hit_miss_ratio.eps
%%Creator: gnuplot 4.2 patchlevel 0
%%CreationDate: Fri Mar 28 13:09:33 2008
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (Wed.26.03.08-11.57.32/msg_size_vs_L1_hit_miss_ratio.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 0)
  /Author (Matthew Faulkner,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Fri Mar 28 13:09:33 2008)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
798 918 M
6164 0 V
stroke
LTb
798 918 M
63 0 V
6101 0 R
-63 0 V
714 918 M
( 0.95) Rshow
1.000 UL
LTb
1.000 UL
LTa
798 1767 M
6164 0 V
stroke
LTb
798 1767 M
63 0 V
6101 0 R
-63 0 V
-6185 0 R
( 0.96) Rshow
1.000 UL
LTb
1.000 UL
LTa
798 2616 M
6164 0 V
stroke
LTb
798 2616 M
63 0 V
6101 0 R
-63 0 V
-6185 0 R
( 0.97) Rshow
1.000 UL
LTb
1.000 UL
LTa
798 3465 M
6164 0 V
stroke
LTb
798 3465 M
63 0 V
6101 0 R
-63 0 V
-6185 0 R
( 0.98) Rshow
1.000 UL
LTb
1.000 UL
LTa
798 4315 M
4337 0 V
1743 0 R
84 0 V
stroke
LTb
798 4315 M
63 0 V
6101 0 R
-63 0 V
-6185 0 R
( 0.99) Rshow
1.000 UL
LTb
1.000 UL
LTa
798 420 M
0 4452 V
stroke
LTb
798 420 M
0 63 V
0 4389 R
0 -63 V
798 280 M
( 1) Cshow
1.000 UL
LTb
1183 420 M
0 31 V
0 4421 R
0 -31 V
1693 420 M
0 31 V
0 4421 R
0 -31 V
1954 420 M
0 31 V
0 4421 R
0 -31 V
stroke
LTa
2078 420 M
0 4452 V
stroke
LTb
2078 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
( 10) Cshow
1.000 UL
LTb
2463 420 M
0 31 V
0 4421 R
0 -31 V
2972 420 M
0 31 V
0 4421 R
0 -31 V
3234 420 M
0 31 V
0 4421 R
0 -31 V
stroke
LTa
3358 420 M
0 4452 V
stroke
LTb
3358 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
( 100) Cshow
1.000 UL
LTb
3743 420 M
0 31 V
0 4421 R
0 -31 V
4252 420 M
0 31 V
0 4421 R
0 -31 V
4513 420 M
0 31 V
0 4421 R
0 -31 V
stroke
LTa
4637 420 M
0 4452 V
stroke
LTb
4637 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
( 1000) Cshow
1.000 UL
LTb
5023 420 M
0 31 V
0 4421 R
0 -31 V
5532 420 M
0 31 V
0 4421 R
0 -31 V
5793 420 M
0 31 V
0 4421 R
0 -31 V
stroke
LTa
5917 420 M
0 3829 V
0 560 R
0 63 V
stroke
LTb
5917 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
( 10000) Cshow
1.000 UL
LTb
6302 420 M
0 31 V
0 4421 R
0 -31 V
6812 420 M
0 31 V
0 4421 R
0 -31 V
stroke
798 4872 N
798 420 L
6164 0 V
0 4452 V
-6164 0 V
Z stroke
LCb setrgbcolor
140 2646 M
currentpoint gsave translate 90 rotate 0 0 M
(L1 Hit Ratio) Cshow
grestore
LTb
LCb setrgbcolor
3880 70 M
(Message Size \(bytes\)) Cshow
LTb
1.000 UP
1.000 UL
LTb
1.000 UL
LT0
798 4698 M
611 -4 V
471 88 V
423 -422 V
404 -96 V
394 -139 V
389 -164 V
388 -94 V
386 -38 V
386 209 V
385 -254 V
386 -926 V
385 -650 V
385 -497 V
386 13 V
385 -218 V
stroke
LT1
798 3635 M
611 320 V
471 -129 V
423 -365 V
404 29 V
394 124 V
389 -315 V
388 -142 V
386 -229 V
386 -190 V
385 -297 V
386 -94 V
385 -578 V
385 40 V
386 -142 V
385 268 V
stroke
LT2
798 3546 M
611 -45 V
471 749 V
423 -647 V
404 -100 V
394 22 V
389 -654 V
388 -303 V
386 -284 V
386 -241 V
385 260 V
386 -546 V
385 274 V
385 -212 V
386 -576 V
385 52 V
stroke
LT3
798 3968 M
611 -139 V
471 -11 V
423 -247 V
404 60 V
394 16 V
389 -391 V
388 -243 V
386 -118 V
386 -228 V
385 -87 V
386 -215 V
385 -440 V
385 -6 V
386 516 V
385 -272 V
stroke
LT0
LTb
6311 4739 M
(Same core) Rshow
LT0
6395 4739 M
399 0 V
-399 31 R
0 -62 V
399 62 R
0 -62 V
798 4592 M
0 211 V
767 4592 M
62 0 V
-62 211 R
62 0 V
580 -186 R
0 153 V
-31 -153 R
62 0 V
-62 153 R
62 0 V
440 -77 R
0 179 V
-31 -179 R
62 0 V
-62 179 R
62 0 V
392 -673 R
0 323 V
-31 -323 R
62 0 V
-62 323 R
62 0 V
373 -343 R
0 170 V
-31 -170 R
62 0 V
-62 170 R
62 0 V
363 -384 R
0 319 V
-31 -319 R
62 0 V
-62 319 R
62 0 V
358 -388 R
0 129 V
-31 -129 R
62 0 V
-62 129 R
62 0 V
357 -179 R
0 42 V
-31 -42 R
62 0 V
-62 42 R
62 0 V
355 -80 R
0 42 V
-31 -42 R
62 0 V
-62 42 R
62 0 V
355 119 R
0 137 V
-31 -137 R
62 0 V
-62 137 R
62 0 V
354 -481 R
0 319 V
-31 -319 R
62 0 V
-62 319 R
62 0 V
5421 2377 M
0 963 V
-31 -963 R
62 0 V
-62 963 R
62 0 V
5806 1687 M
0 1043 V
5775 1687 M
62 0 V
-62 1043 R
62 0 V
6191 1398 M
0 626 V
-31 -626 R
62 0 V
-62 626 R
62 0 V
355 -900 R
0 1201 V
6546 1124 M
62 0 V
-62 1201 R
62 0 V
6962 1173 M
0 667 V
-31 -667 R
62 0 V
-62 667 R
62 0 V
798 4698 Pls
1409 4694 Pls
1880 4782 Pls
2303 4360 Pls
2707 4264 Pls
3101 4125 Pls
3490 3961 Pls
3878 3867 Pls
4264 3829 Pls
4650 4038 Pls
5035 3784 Pls
5421 2858 Pls
5806 2208 Pls
6191 1711 Pls
6577 1724 Pls
6962 1506 Pls
6594 4739 Pls
1.000 UL
LT1
LTb
6311 4599 M
(Same computer) Rshow
LT1
6395 4599 M
399 0 V
-399 31 R
0 -62 V
399 62 R
0 -62 V
798 3598 M
0 73 V
-31 -73 R
62 0 V
-62 73 R
62 0 V
580 -5 R
0 579 V
-31 -579 R
62 0 V
-62 579 R
62 0 V
440 -749 R
0 660 V
-31 -660 R
62 0 V
-62 660 R
62 0 V
392 -929 R
0 467 V
-31 -467 R
62 0 V
-62 467 R
62 0 V
373 -400 R
0 392 V
-31 -392 R
62 0 V
-62 392 R
62 0 V
363 -297 R
0 450 V
-31 -450 R
62 0 V
-62 450 R
62 0 V
358 -573 R
0 65 V
-31 -65 R
62 0 V
-62 65 R
62 0 V
357 -205 R
0 62 V
-31 -62 R
62 0 V
-62 62 R
62 0 V
355 -267 R
0 14 V
-31 -14 R
62 0 V
-62 14 R
62 0 V
355 -238 R
0 82 V
-31 -82 R
62 0 V
-62 82 R
62 0 V
354 -368 R
0 61 V
-31 -61 R
62 0 V
-62 61 R
62 0 V
355 -779 R
0 1308 V
5390 1693 M
62 0 V
-62 1308 R
62 0 V
5806 1686 M
0 166 V
-31 -166 R
62 0 V
-62 166 R
62 0 V
354 -623 R
0 1160 V
6160 1229 M
62 0 V
-62 1160 R
62 0 V
6577 1058 M
0 1219 V
6546 1058 M
62 0 V
-62 1219 R
62 0 V
6962 1184 M
0 1501 V
6931 1184 M
62 0 V
-62 1501 R
62 0 V
798 3635 Crs
1409 3955 Crs
1880 3826 Crs
2303 3461 Crs
2707 3490 Crs
3101 3614 Crs
3490 3299 Crs
3878 3157 Crs
4264 2928 Crs
4650 2738 Crs
5035 2441 Crs
5421 2347 Crs
5806 1769 Crs
6191 1809 Crs
6577 1667 Crs
6962 1935 Crs
6594 4599 Crs
1.000 UL
LT2
LTb
6311 4459 M
(Same die) Rshow
LT2
6395 4459 M
399 0 V
-399 31 R
0 -62 V
399 62 R
0 -62 V
798 3193 M
0 706 V
767 3193 M
62 0 V
-62 706 R
62 0 V
580 -795 R
0 794 V
-31 -794 R
62 0 V
-62 794 R
62 0 V
440 1 R
0 703 V
-31 -703 R
62 0 V
-62 703 R
62 0 V
2303 3270 M
0 665 V
-31 -665 R
62 0 V
-62 665 R
62 0 V
373 -825 R
0 785 V
-31 -785 R
62 0 V
-62 785 R
62 0 V
363 -915 R
0 1090 V
3070 2980 M
62 0 V
-62 1090 R
62 0 V
3490 2667 M
0 408 V
-31 -408 R
62 0 V
-62 408 R
62 0 V
357 -530 R
0 47 V
-31 -47 R
62 0 V
-62 47 R
62 0 V
355 -341 R
0 67 V
-31 -67 R
62 0 V
-62 67 R
62 0 V
355 -305 R
0 59 V
-31 -59 R
62 0 V
-62 59 R
62 0 V
354 192 R
0 77 V
-31 -77 R
62 0 V
-62 77 R
62 0 V
5421 1252 M
0 1009 V
5390 1252 M
62 0 V
-62 1009 R
62 0 V
354 -890 R
0 1320 V
5775 1371 M
62 0 V
-62 1320 R
62 0 V
6191 1085 M
0 1469 V
6160 1085 M
62 0 V
-62 1469 R
62 0 V
6577 420 M
0 1646 V
6546 420 M
62 0 V
-62 1646 R
62 0 V
6962 528 M
0 1534 V
6931 528 M
62 0 V
-62 1534 R
62 0 V
798 3546 Star
1409 3501 Star
1880 4250 Star
2303 3603 Star
2707 3503 Star
3101 3525 Star
3490 2871 Star
3878 2568 Star
4264 2284 Star
4650 2043 Star
5035 2303 Star
5421 1757 Star
5806 2031 Star
6191 1819 Star
6577 1243 Star
6962 1295 Star
6594 4459 Star
1.000 UL
LT3
LTb
6311 4319 M
(Same processor) Rshow
LT3
6395 4319 M
399 0 V
-399 31 R
0 -62 V
399 62 R
0 -62 V
798 3626 M
0 684 V
767 3626 M
62 0 V
-62 684 R
62 0 V
580 -769 R
0 576 V
-31 -576 R
62 0 V
-62 576 R
62 0 V
440 -471 R
0 343 V
-31 -343 R
62 0 V
-62 343 R
62 0 V
392 -838 R
0 839 V
-31 -839 R
62 0 V
-62 839 R
62 0 V
373 -599 R
0 480 V
-31 -480 R
62 0 V
-62 480 R
62 0 V
363 -535 R
0 622 V
-31 -622 R
62 0 V
-62 622 R
62 0 V
358 -781 R
0 158 V
-31 -158 R
62 0 V
-62 158 R
62 0 V
357 -355 R
0 65 V
-31 -65 R
62 0 V
-62 65 R
62 0 V
355 -198 R
0 95 V
-31 -95 R
62 0 V
-62 95 R
62 0 V
355 -313 R
0 77 V
-31 -77 R
62 0 V
-62 77 R
62 0 V
354 -522 R
0 793 V
-31 -793 R
62 0 V
-62 793 R
62 0 V
5421 1766 M
0 1199 V
5390 1766 M
62 0 V
-62 1199 R
62 0 V
5806 1363 M
0 1124 V
5775 1363 M
62 0 V
-62 1124 R
62 0 V
6191 1203 M
0 1432 V
6160 1203 M
62 0 V
-62 1432 R
62 0 V
355 -834 R
0 1267 V
6546 1801 M
62 0 V
-62 1267 R
62 0 V
6962 1393 M
0 1541 V
6931 1393 M
62 0 V
-62 1541 R
62 0 V
798 3968 Box
1409 3829 Box
1880 3818 Box
2303 3571 Box
2707 3631 Box
3101 3647 Box
3490 3256 Box
3878 3013 Box
4264 2895 Box
4650 2667 Box
5035 2580 Box
5421 2365 Box
5806 1925 Box
6191 1919 Box
6577 2435 Box
6962 2163 Box
6594 4319 Box
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
