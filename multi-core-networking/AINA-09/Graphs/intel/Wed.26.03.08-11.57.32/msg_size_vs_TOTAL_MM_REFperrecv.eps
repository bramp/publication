%!PS-Adobe-2.0
%%Title: Wed.26.03.08-11.57.32/msg_size_vs_TOTAL_MM_REFperrecv.eps
%%Creator: gnuplot 4.2 patchlevel 0
%%CreationDate: Fri Mar 28 13:09:22 2008
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (Wed.26.03.08-11.57.32/msg_size_vs_TOTAL_MM_REFperrecv.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 0)
  /Author (Matthew Faulkner,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Fri Mar 28 13:09:22 2008)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
714 595 M
31 0 V
6217 0 R
-31 0 V
714 764 M
31 0 V
6217 0 R
-31 0 V
714 901 M
31 0 V
6217 0 R
-31 0 V
714 1017 M
31 0 V
6217 0 R
-31 0 V
714 1118 M
31 0 V
6217 0 R
-31 0 V
714 1207 M
31 0 V
6217 0 R
-31 0 V
stroke
LTa
714 1287 M
6248 0 V
stroke
LTb
714 1287 M
63 0 V
6185 0 R
-63 0 V
-6269 0 R
( 1) Rshow
1.000 UL
LTb
714 1810 M
31 0 V
6217 0 R
-31 0 V
714 2116 M
31 0 V
6217 0 R
-31 0 V
714 2333 M
31 0 V
6217 0 R
-31 0 V
714 2501 M
31 0 V
6217 0 R
-31 0 V
714 2639 M
31 0 V
6217 0 R
-31 0 V
714 2755 M
31 0 V
6217 0 R
-31 0 V
714 2856 M
31 0 V
6217 0 R
-31 0 V
714 2945 M
31 0 V
6217 0 R
-31 0 V
stroke
LTa
714 3024 M
6248 0 V
stroke
LTb
714 3024 M
63 0 V
6185 0 R
-63 0 V
-6269 0 R
( 10) Rshow
1.000 UL
LTb
714 3547 M
31 0 V
6217 0 R
-31 0 V
714 3853 M
31 0 V
6217 0 R
-31 0 V
714 4071 M
31 0 V
6217 0 R
-31 0 V
714 4239 M
31 0 V
6217 0 R
-31 0 V
714 4377 M
31 0 V
6217 0 R
-31 0 V
714 4493 M
31 0 V
6217 0 R
-31 0 V
714 4594 M
31 0 V
6217 0 R
-31 0 V
714 4683 M
31 0 V
6217 0 R
-31 0 V
stroke
LTa
714 4762 M
6248 0 V
stroke
LTb
714 4762 M
63 0 V
6185 0 R
-63 0 V
-6269 0 R
( 100) Rshow
1.000 UL
LTb
1.000 UL
LTa
714 420 M
0 4452 V
stroke
LTb
714 420 M
0 63 V
0 4389 R
0 -63 V
714 280 M
( 1) Cshow
1.000 UL
LTb
1105 420 M
0 31 V
0 4421 R
0 -31 V
1621 420 M
0 31 V
0 4421 R
0 -31 V
1886 420 M
0 31 V
0 4421 R
0 -31 V
stroke
LTa
2011 420 M
0 4452 V
stroke
LTb
2011 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
( 10) Cshow
1.000 UL
LTb
2402 420 M
0 31 V
0 4421 R
0 -31 V
2918 420 M
0 31 V
0 4421 R
0 -31 V
3183 420 M
0 31 V
0 4421 R
0 -31 V
stroke
LTa
3308 420 M
0 4452 V
stroke
LTb
3308 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
( 100) Cshow
1.000 UL
LTb
3699 420 M
0 31 V
0 4421 R
0 -31 V
4215 420 M
0 31 V
0 4421 R
0 -31 V
4480 420 M
0 31 V
0 4421 R
0 -31 V
stroke
LTa
4606 420 M
0 4452 V
stroke
LTb
4606 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
( 1000) Cshow
1.000 UL
LTb
4996 420 M
0 31 V
0 4421 R
0 -31 V
5512 420 M
0 31 V
0 4421 R
0 -31 V
5777 420 M
0 31 V
0 4421 R
0 -31 V
stroke
LTa
5903 420 M
0 63 V
0 560 R
0 3829 V
stroke
LTb
5903 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
( 10000) Cshow
1.000 UL
LTb
6293 420 M
0 31 V
0 4421 R
0 -31 V
6810 420 M
0 31 V
0 4421 R
0 -31 V
stroke
714 4872 N
714 420 L
6248 0 V
0 4452 V
-6248 0 V
Z stroke
LCb setrgbcolor
140 2646 M
currentpoint gsave translate 90 rotate 0 0 M
(Number of Main Memory References / recv\(\)) Cshow
grestore
LTb
LCb setrgbcolor
3838 70 M
(Message Size \(bytes\)) Cshow
LTb
1.000 UP
1.000 UL
LTb
1.000 UL
LT0
714 697 M
619 3 V
477 -54 V
430 738 V
409 157 V
399 321 V
395 110 V
393 143 V
391 229 V
391 -692 V
391 407 V
391 326 V
390 287 V
391 344 V
390 453 V
391 596 V
stroke
LT1
714 4467 M
619 7 V
477 -182 V
430 326 V
409 -125 V
399 19 V
395 106 V
393 29 V
391 -9 V
391 -145 V
391 223 V
391 141 V
390 -76 V
391 -42 V
390 19 V
391 -6 V
stroke
LT2
714 630 M
619 53 V
477 45 V
430 38 V
409 2 V
3048 662 L
395 62 V
393 -43 V
391 -77 V
391 1109 V
391 -351 V
5400 999 L
390 70 V
391 -30 V
390 -96 V
391 62 V
stroke
LT3
714 4052 M
619 60 V
477 -288 V
430 109 V
409 508 V
399 46 V
395 140 V
393 24 V
391 6 V
391 -150 V
391 221 V
391 119 V
390 -125 V
391 60 V
390 2 V
391 -20 V
stroke
LT0
LTb
6311 973 M
(Same core) Rshow
LT0
6395 973 M
399 0 V
-399 31 R
0 -62 V
399 62 R
0 -62 V
714 474 M
0 395 V
683 474 M
62 0 V
683 869 M
62 0 V
1333 515 M
0 334 V
1302 515 M
62 0 V
-62 334 R
62 0 V
1810 535 M
0 208 V
1779 535 M
62 0 V
-62 208 R
62 0 V
399 315 R
0 552 V
-31 -552 R
62 0 V
-62 552 R
62 0 V
378 -158 R
0 169 V
-31 -169 R
62 0 V
-62 169 R
62 0 V
368 160 R
0 154 V
-31 -154 R
62 0 V
-62 154 R
62 0 V
364 -41 R
0 148 V
-31 -148 R
62 0 V
-62 148 R
62 0 V
362 44 R
0 56 V
-31 -56 R
62 0 V
-62 56 R
62 0 V
360 135 R
0 129 V
-31 -129 R
62 0 V
-62 129 R
62 0 V
360 -917 R
0 297 V
-31 -297 R
62 0 V
-62 297 R
62 0 V
360 15 R
0 449 V
-31 -449 R
62 0 V
-62 449 R
62 0 V
360 42 R
0 177 V
-31 -177 R
62 0 V
-62 177 R
62 0 V
359 39 R
0 299 V
-31 -299 R
62 0 V
-62 299 R
62 0 V
360 50 R
0 290 V
-31 -290 R
62 0 V
-62 290 R
62 0 V
359 241 R
0 154 V
-31 -154 R
62 0 V
-62 154 R
62 0 V
360 436 R
0 164 V
-31 -164 R
62 0 V
-62 164 R
62 0 V
714 697 Pls
1333 700 Pls
1810 646 Pls
2240 1384 Pls
2649 1541 Pls
3048 1862 Pls
3443 1972 Pls
3836 2115 Pls
4227 2344 Pls
4618 1652 Pls
5009 2059 Pls
5400 2385 Pls
5790 2672 Pls
6181 3016 Pls
6571 3469 Pls
6962 4065 Pls
6594 973 Pls
1.000 UL
LT1
LTb
6311 833 M
(Same computer) Rshow
LT1
6395 833 M
399 0 V
-399 31 R
0 -62 V
399 62 R
0 -62 V
714 4066 M
0 661 V
683 4066 M
62 0 V
-62 661 R
62 0 V
588 -622 R
0 617 V
-31 -617 R
62 0 V
-62 617 R
62 0 V
1810 3521 M
0 1144 V
1779 3521 M
62 0 V
-62 1144 R
62 0 V
399 -61 R
0 28 V
-31 -28 R
62 0 V
-62 28 R
62 0 V
378 -459 R
0 544 V
-31 -544 R
62 0 V
-62 544 R
62 0 V
368 -483 R
0 481 V
-31 -481 R
62 0 V
-62 481 R
62 0 V
364 -103 R
0 13 V
-31 -13 R
62 0 V
-62 13 R
62 0 V
362 4 R
0 35 V
-31 -35 R
62 0 V
-62 35 R
62 0 V
360 -39 R
0 25 V
-31 -25 R
62 0 V
-62 25 R
62 0 V
360 -166 R
0 18 V
-31 -18 R
62 0 V
-62 18 R
62 0 V
360 210 R
0 9 V
-31 -9 R
62 0 V
-62 9 R
62 0 V
360 120 R
0 31 V
-31 -31 R
62 0 V
-62 31 R
62 0 V
359 -99 R
0 16 V
-31 -16 R
62 0 V
-62 16 R
62 0 V
360 -59 R
0 17 V
-31 -17 R
62 0 V
-62 17 R
62 0 V
359 0 R
0 22 V
-31 -22 R
62 0 V
-62 22 R
62 0 V
360 -34 R
0 33 V
-31 -33 R
62 0 V
-62 33 R
62 0 V
714 4467 Crs
1333 4474 Crs
1810 4292 Crs
2240 4618 Crs
2649 4493 Crs
3048 4512 Crs
3443 4618 Crs
3836 4647 Crs
4227 4638 Crs
4618 4493 Crs
5009 4716 Crs
5400 4857 Crs
5790 4781 Crs
6181 4739 Crs
6571 4758 Crs
6962 4752 Crs
6594 833 Crs
1.000 UL
LT2
LTb
6311 693 M
(Same die) Rshow
LT2
6395 693 M
399 0 V
-399 31 R
0 -62 V
399 62 R
0 -62 V
714 420 M
0 374 V
683 420 M
62 0 V
683 794 M
62 0 V
1333 648 M
0 68 V
-31 -68 R
62 0 V
-62 68 R
62 0 V
446 -23 R
0 68 V
-31 -68 R
62 0 V
-62 68 R
62 0 V
399 -46 R
0 98 V
-31 -98 R
62 0 V
-62 98 R
62 0 V
378 -68 R
0 45 V
-31 -45 R
62 0 V
-62 45 R
62 0 V
3048 452 M
0 375 V
3017 452 M
62 0 V
-62 375 R
62 0 V
3443 696 M
0 55 V
-31 -55 R
62 0 V
-62 55 R
62 0 V
362 -85 R
0 29 V
-31 -29 R
62 0 V
-62 29 R
62 0 V
4227 581 M
0 46 V
-31 -46 R
62 0 V
-62 46 R
62 0 V
360 1072 R
0 28 V
-31 -28 R
62 0 V
-62 28 R
62 0 V
360 -378 R
0 26 V
-31 -26 R
62 0 V
-62 26 R
62 0 V
5400 978 M
0 42 V
-31 -42 R
62 0 V
-62 42 R
62 0 V
359 10 R
0 77 V
-31 -77 R
62 0 V
-62 77 R
62 0 V
360 -84 R
0 31 V
-31 -31 R
62 0 V
-62 31 R
62 0 V
6571 906 M
0 72 V
-31 -72 R
62 0 V
-62 72 R
62 0 V
360 -96 R
0 228 V
6931 882 M
62 0 V
-62 228 R
62 0 V
714 630 Star
1333 683 Star
1810 728 Star
2240 766 Star
2649 768 Star
3048 662 Star
3443 724 Star
3836 681 Star
4227 604 Star
4618 1713 Star
5009 1362 Star
5400 999 Star
5790 1069 Star
6181 1039 Star
6571 943 Star
6962 1005 Star
6594 693 Star
1.000 UL
LT3
LTb
6311 553 M
(Same processor) Rshow
LT3
6395 553 M
399 0 V
-399 31 R
0 -62 V
399 62 R
0 -62 V
714 2763 M
0 1740 V
683 2763 M
62 0 V
683 4503 M
62 0 V
1333 2887 M
0 1669 V
1302 2887 M
62 0 V
-62 1669 R
62 0 V
1810 1340 M
0 2992 V
1779 1340 M
62 0 V
-62 2992 R
62 0 V
2240 2763 M
0 1608 V
2209 2763 M
62 0 V
-62 1608 R
62 0 V
378 -326 R
0 654 V
-31 -654 R
62 0 V
-62 654 R
62 0 V
368 -579 R
0 613 V
-31 -613 R
62 0 V
-62 613 R
62 0 V
364 -111 R
0 10 V
-31 -10 R
62 0 V
-62 10 R
62 0 V
362 13 R
0 11 V
-31 -11 R
62 0 V
-62 11 R
62 0 V
360 -11 R
0 24 V
-31 -24 R
62 0 V
-62 24 R
62 0 V
360 -171 R
0 18 V
-31 -18 R
62 0 V
-62 18 R
62 0 V
360 204 R
0 16 V
-31 -16 R
62 0 V
-62 16 R
62 0 V
360 103 R
0 16 V
-31 -16 R
62 0 V
-62 16 R
62 0 V
359 -140 R
0 14 V
-31 -14 R
62 0 V
-62 14 R
62 0 V
360 30 R
0 46 V
-31 -46 R
62 0 V
-62 46 R
62 0 V
359 -29 R
0 16 V
-31 -16 R
62 0 V
-62 16 R
62 0 V
360 -36 R
0 17 V
-31 -17 R
62 0 V
-62 17 R
62 0 V
714 4052 Box
1333 4112 Box
1810 3824 Box
2240 3933 Box
2649 4441 Box
3048 4487 Box
3443 4627 Box
3836 4651 Box
4227 4657 Box
4618 4507 Box
5009 4728 Box
5400 4847 Box
5790 4722 Box
6181 4782 Box
6571 4784 Box
6962 4764 Box
6594 553 Box
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
