%!PS-Adobe-2.0
%%Title: Wed.26.03.08-11.57.32/msg_size_vs_TOTAL_L1_MISSperrecv.eps
%%Creator: gnuplot 4.2 patchlevel 0
%%CreationDate: Fri Mar 28 13:09:11 2008
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (Wed.26.03.08-11.57.32/msg_size_vs_TOTAL_L1_MISSperrecv.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 0)
  /Author (Matthew Faulkner,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Fri Mar 28 13:09:11 2008)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
882 450 M
31 0 V
6049 0 R
-31 0 V
882 580 M
31 0 V
6049 0 R
-31 0 V
882 686 M
31 0 V
6049 0 R
-31 0 V
882 776 M
31 0 V
6049 0 R
-31 0 V
882 854 M
31 0 V
6049 0 R
-31 0 V
882 922 M
31 0 V
6049 0 R
-31 0 V
stroke
LTa
882 984 M
4253 0 V
1743 0 R
84 0 V
stroke
LTb
882 984 M
63 0 V
6017 0 R
-63 0 V
798 984 M
( 100) Rshow
1.000 UL
LTb
882 1388 M
31 0 V
6049 0 R
-31 0 V
882 1624 M
31 0 V
6049 0 R
-31 0 V
882 1792 M
31 0 V
6049 0 R
-31 0 V
882 1922 M
31 0 V
6049 0 R
-31 0 V
882 2028 M
31 0 V
6049 0 R
-31 0 V
882 2118 M
31 0 V
6049 0 R
-31 0 V
882 2196 M
31 0 V
6049 0 R
-31 0 V
882 2264 M
31 0 V
6049 0 R
-31 0 V
stroke
LTa
882 2326 M
6080 0 V
stroke
LTb
882 2326 M
63 0 V
6017 0 R
-63 0 V
-6101 0 R
( 1000) Rshow
1.000 UL
LTb
882 2730 M
31 0 V
6049 0 R
-31 0 V
882 2966 M
31 0 V
6049 0 R
-31 0 V
882 3133 M
31 0 V
6049 0 R
-31 0 V
882 3263 M
31 0 V
6049 0 R
-31 0 V
882 3370 M
31 0 V
6049 0 R
-31 0 V
882 3460 M
31 0 V
6049 0 R
-31 0 V
882 3537 M
31 0 V
6049 0 R
-31 0 V
882 3606 M
31 0 V
6049 0 R
-31 0 V
stroke
LTa
882 3667 M
6080 0 V
stroke
LTb
882 3667 M
63 0 V
6017 0 R
-63 0 V
-6101 0 R
( 10000) Rshow
1.000 UL
LTb
882 4071 M
31 0 V
6049 0 R
-31 0 V
882 4308 M
31 0 V
6049 0 R
-31 0 V
882 4475 M
31 0 V
6049 0 R
-31 0 V
882 4605 M
31 0 V
6049 0 R
-31 0 V
882 4712 M
31 0 V
6049 0 R
-31 0 V
882 4801 M
31 0 V
6049 0 R
-31 0 V
882 4879 M
31 0 V
6049 0 R
-31 0 V
stroke
LTa
882 420 M
0 4452 V
stroke
LTb
882 420 M
0 63 V
0 4389 R
0 -63 V
882 280 M
( 1) Cshow
1.000 UL
LTb
1262 420 M
0 31 V
0 4421 R
0 -31 V
1764 420 M
0 31 V
0 4421 R
0 -31 V
2022 420 M
0 31 V
0 4421 R
0 -31 V
stroke
LTa
2144 420 M
0 4452 V
stroke
LTb
2144 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
( 10) Cshow
1.000 UL
LTb
2524 420 M
0 31 V
0 4421 R
0 -31 V
3027 420 M
0 31 V
0 4421 R
0 -31 V
3284 420 M
0 31 V
0 4421 R
0 -31 V
stroke
LTa
3407 420 M
0 4452 V
stroke
LTb
3407 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
( 100) Cshow
1.000 UL
LTb
3787 420 M
0 31 V
0 4421 R
0 -31 V
4289 420 M
0 31 V
0 4421 R
0 -31 V
4547 420 M
0 31 V
0 4421 R
0 -31 V
stroke
LTa
4669 420 M
0 4452 V
stroke
LTb
4669 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
( 1000) Cshow
1.000 UL
LTb
5049 420 M
0 31 V
0 4421 R
0 -31 V
5551 420 M
0 31 V
0 4421 R
0 -31 V
5809 420 M
0 31 V
0 4421 R
0 -31 V
stroke
LTa
5931 420 M
0 63 V
0 560 R
0 3829 V
stroke
LTb
5931 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
( 10000) Cshow
1.000 UL
LTb
6311 420 M
0 31 V
0 4421 R
0 -31 V
6814 420 M
0 31 V
0 4421 R
0 -31 V
stroke
882 4872 N
882 420 L
6080 0 V
0 4452 V
-6080 0 V
Z stroke
LCb setrgbcolor
140 2646 M
currentpoint gsave translate 90 rotate 0 0 M
(Number of L1 Cache Misses / recv\(\)) Cshow
grestore
LTb
LCb setrgbcolor
3922 70 M
(Message Size \(bytes\)) Cshow
LTb
1.000 UP
1.000 UL
LTb
1.000 UL
LT0
882 1219 M
602 -63 V
465 -109 V
418 984 V
398 177 V
388 175 V
385 106 V
382 29 V
381 51 V
380 -177 V
381 348 V
380 515 V
380 385 V
380 430 V
380 349 V
380 401 V
stroke
LT1
882 1905 M
602 -297 V
465 128 V
418 70 V
398 -7 V
388 -99 V
385 168 V
382 75 V
381 88 V
380 86 V
381 144 V
380 48 V
380 145 V
380 3 V
380 40 V
380 -52 V
stroke
LT2
882 1509 M
602 12 V
465 -515 V
418 417 V
398 80 V
388 23 V
385 286 V
382 101 V
381 89 V
380 176 V
381 -84 V
380 128 V
380 -85 V
380 91 V
380 132 V
380 -12 V
stroke
LT3
882 1449 M
602 173 V
465 -60 V
418 125 V
398 -107 V
388 50 V
385 195 V
382 117 V
381 90 V
380 66 V
381 103 V
380 102 V
380 72 V
380 36 V
380 -87 V
380 72 V
stroke
LT0
LTb
6311 973 M
(Same core) Rshow
LT0
6395 973 M
399 0 V
-399 31 R
0 -62 V
399 62 R
0 -62 V
882 1118 M
0 188 V
851 1118 M
62 0 V
-62 188 R
62 0 V
571 -215 R
0 124 V
-31 -124 R
62 0 V
-62 124 R
62 0 V
1949 913 M
0 242 V
1918 913 M
62 0 V
-62 242 R
62 0 V
387 471 R
0 641 V
-31 -641 R
62 0 V
-62 641 R
62 0 V
367 -201 R
0 256 V
-31 -256 R
62 0 V
-62 256 R
62 0 V
357 -62 R
0 224 V
-31 -224 R
62 0 V
-62 224 R
62 0 V
354 -40 R
0 88 V
-31 -88 R
62 0 V
-62 88 R
62 0 V
351 -32 R
0 34 V
-31 -34 R
62 0 V
-62 34 R
62 0 V
350 19 R
0 32 V
-31 -32 R
62 0 V
-62 32 R
62 0 V
349 -240 R
0 90 V
-31 -90 R
62 0 V
-62 90 R
62 0 V
350 230 R
0 140 V
-31 -140 R
62 0 V
-62 140 R
62 0 V
349 320 R
0 237 V
-31 -237 R
62 0 V
-62 237 R
62 0 V
349 152 R
0 230 V
-31 -230 R
62 0 V
-62 230 R
62 0 V
349 266 R
0 114 V
-31 -114 R
62 0 V
-62 114 R
62 0 V
349 184 R
0 204 V
-31 -204 R
62 0 V
-62 204 R
62 0 V
349 250 R
0 110 V
-31 -110 R
62 0 V
-62 110 R
62 0 V
882 1219 Pls
1484 1156 Pls
1949 1047 Pls
2367 2031 Pls
2765 2208 Pls
3153 2383 Pls
3538 2489 Pls
3920 2518 Pls
4301 2569 Pls
4681 2392 Pls
5062 2740 Pls
5442 3255 Pls
5822 3640 Pls
6202 4070 Pls
6582 4419 Pls
6962 4820 Pls
6594 973 Pls
1.000 UL
LT1
LTb
6311 833 M
(Same computer) Rshow
LT1
6395 833 M
399 0 V
-399 31 R
0 -62 V
399 62 R
0 -62 V
882 1899 M
0 13 V
-31 -13 R
62 0 V
-62 13 R
62 0 V
571 -772 R
0 724 V
-31 -724 R
62 0 V
-62 724 R
62 0 V
434 -522 R
0 627 V
-31 -627 R
62 0 V
-62 627 R
62 0 V
387 -347 R
0 323 V
-31 -323 R
62 0 V
-62 323 R
62 0 V
367 -317 R
0 302 V
-31 -302 R
62 0 V
-62 302 R
62 0 V
357 -439 R
0 362 V
-31 -362 R
62 0 V
-62 362 R
62 0 V
354 -5 R
0 40 V
-31 -40 R
62 0 V
-62 40 R
62 0 V
351 46 R
0 18 V
-31 -18 R
62 0 V
-62 18 R
62 0 V
350 70 R
0 17 V
-31 -17 R
62 0 V
-62 17 R
62 0 V
349 70 R
0 16 V
-31 -16 R
62 0 V
-62 16 R
62 0 V
350 130 R
0 12 V
-31 -12 R
62 0 V
-62 12 R
62 0 V
349 -118 R
0 285 V
-31 -285 R
62 0 V
-62 285 R
62 0 V
349 12 R
0 16 V
-31 -16 R
62 0 V
-62 16 R
62 0 V
349 -109 R
0 192 V
-31 -192 R
62 0 V
-62 192 R
62 0 V
349 -153 R
0 195 V
-31 -195 R
62 0 V
-62 195 R
62 0 V
349 -286 R
0 259 V
-31 -259 R
62 0 V
-62 259 R
62 0 V
882 1905 Crs
1484 1608 Crs
1949 1736 Crs
2367 1806 Crs
2765 1799 Crs
3153 1700 Crs
3538 1868 Crs
3920 1943 Crs
4301 2031 Crs
4681 2117 Crs
5062 2261 Crs
5442 2309 Crs
5822 2454 Crs
6202 2457 Crs
6582 2497 Crs
6962 2445 Crs
6594 833 Crs
1.000 UL
LT2
LTb
6311 693 M
(Same die) Rshow
LT2
6395 693 M
399 0 V
-399 31 R
0 -62 V
399 62 R
0 -62 V
882 1031 M
0 737 V
851 1031 M
62 0 V
-62 737 R
62 0 V
571 -708 R
0 716 V
-31 -716 R
62 0 V
-62 716 R
62 0 V
1949 420 M
0 872 V
1918 420 M
62 0 V
-62 872 R
62 0 V
387 -84 R
0 372 V
-31 -372 R
62 0 V
-62 372 R
62 0 V
367 -388 R
0 512 V
-31 -512 R
62 0 V
-62 512 R
62 0 V
357 -560 R
0 611 V
-31 -611 R
62 0 V
-62 611 R
62 0 V
354 5 R
0 99 V
-31 -99 R
62 0 V
-62 99 R
62 0 V
351 41 R
0 25 V
-31 -25 R
62 0 V
-62 25 R
62 0 V
350 62 R
0 29 V
-31 -29 R
62 0 V
-62 29 R
62 0 V
349 149 R
0 27 V
-31 -27 R
62 0 V
-62 27 R
62 0 V
350 -106 R
0 16 V
-31 -16 R
62 0 V
-62 16 R
62 0 V
349 29 R
0 169 V
-31 -169 R
62 0 V
-62 169 R
62 0 V
349 -308 R
0 261 V
-31 -261 R
62 0 V
-62 261 R
62 0 V
349 -174 R
0 268 V
-31 -268 R
62 0 V
-62 268 R
62 0 V
349 -122 R
0 244 V
-31 -244 R
62 0 V
-62 244 R
62 0 V
349 -260 R
0 251 V
-31 -251 R
62 0 V
-62 251 R
62 0 V
882 1509 Star
1484 1521 Star
1949 1006 Star
2367 1423 Star
2765 1503 Star
3153 1526 Star
3538 1812 Star
3920 1913 Star
4301 2002 Star
4681 2178 Star
5062 2094 Star
5442 2222 Star
5822 2137 Star
6202 2228 Star
6582 2360 Star
6962 2348 Star
6594 693 Star
1.000 UL
LT3
LTb
6311 553 M
(Same processor) Rshow
LT3
6395 553 M
399 0 V
-399 31 R
0 -62 V
399 62 R
0 -62 V
882 863 M
0 872 V
851 863 M
62 0 V
-62 872 R
62 0 V
571 -564 R
0 703 V
-31 -703 R
62 0 V
-62 703 R
62 0 V
434 -665 R
0 571 V
-31 -571 R
62 0 V
-62 571 R
62 0 V
387 -458 R
0 588 V
-31 -588 R
62 0 V
-62 588 R
62 0 V
367 -553 R
0 384 V
-31 -384 R
62 0 V
-62 384 R
62 0 V
357 -342 R
0 396 V
-31 -396 R
62 0 V
-62 396 R
62 0 V
354 -13 R
0 84 V
-31 -84 R
62 0 V
-62 84 R
62 0 V
351 66 R
0 19 V
-31 -19 R
62 0 V
-62 19 R
62 0 V
350 74 R
0 14 V
-31 -14 R
62 0 V
-62 14 R
62 0 V
349 43 R
0 32 V
-31 -32 R
62 0 V
-62 32 R
62 0 V
350 -14 R
0 188 V
-31 -188 R
62 0 V
-62 188 R
62 0 V
349 -135 R
0 269 V
-31 -269 R
62 0 V
-62 269 R
62 0 V
349 -157 R
0 202 V
-31 -202 R
62 0 V
-62 202 R
62 0 V
349 -199 R
0 258 V
-31 -258 R
62 0 V
-62 258 R
62 0 V
349 -348 R
0 263 V
-31 -263 R
62 0 V
-62 263 R
62 0 V
349 -202 R
0 280 V
-31 -280 R
62 0 V
-62 280 R
62 0 V
882 1449 Box
1484 1622 Box
1949 1562 Box
2367 1687 Box
2765 1580 Box
3153 1630 Box
3538 1825 Box
3920 1942 Box
4301 2032 Box
4681 2098 Box
5062 2201 Box
5442 2303 Box
5822 2375 Box
6202 2411 Box
6582 2324 Box
6962 2396 Box
6594 553 Box
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
