%!PS-Adobe-2.0
%%Title: Wed.26.03.08-11.57.32/msg_size_vs_TOTAL_DC_REF.eps
%%Creator: gnuplot 4.2 patchlevel 0
%%CreationDate: Fri Mar 28 13:09:04 2008
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (Wed.26.03.08-11.57.32/msg_size_vs_TOTAL_DC_REF.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 0)
  /Author (Matthew Faulkner,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Fri Mar 28 13:09:04 2008)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
378 998 M
31 0 V
6553 0 R
-31 0 V
378 2395 M
31 0 V
6553 0 R
-31 0 V
378 3386 M
31 0 V
6553 0 R
-31 0 V
378 4154 M
31 0 V
6553 0 R
-31 0 V
378 4782 M
31 0 V
6553 0 R
-31 0 V
stroke
LTa
378 420 M
0 4452 V
stroke
LTb
378 420 M
0 63 V
0 4389 R
0 -63 V
378 280 M
( 1) Cshow
1.000 UL
LTb
790 420 M
0 31 V
0 4421 R
0 -31 V
1333 420 M
0 31 V
0 4421 R
0 -31 V
1613 420 M
0 31 V
0 4421 R
0 -31 V
stroke
LTa
1745 420 M
0 4452 V
stroke
LTb
1745 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
( 10) Cshow
1.000 UL
LTb
2156 420 M
0 31 V
0 4421 R
0 -31 V
2700 420 M
0 31 V
0 4421 R
0 -31 V
2979 420 M
0 31 V
0 4421 R
0 -31 V
stroke
LTa
3112 420 M
0 4452 V
stroke
LTb
3112 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
( 100) Cshow
1.000 UL
LTb
3523 420 M
0 31 V
0 4421 R
0 -31 V
4067 420 M
0 31 V
0 4421 R
0 -31 V
4346 420 M
0 31 V
0 4421 R
0 -31 V
stroke
LTa
4479 420 M
0 4452 V
stroke
LTb
4479 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
( 1000) Cshow
1.000 UL
LTb
4890 420 M
0 31 V
0 4421 R
0 -31 V
5434 420 M
0 31 V
0 4421 R
0 -31 V
5713 420 M
0 31 V
0 4421 R
0 -31 V
stroke
LTa
5846 420 M
0 63 V
0 560 R
0 3829 V
stroke
LTb
5846 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
( 10000) Cshow
1.000 UL
LTb
6257 420 M
0 31 V
0 4421 R
0 -31 V
6801 420 M
0 31 V
0 4421 R
0 -31 V
stroke
378 4872 N
378 420 L
6584 0 V
0 4452 V
-6584 0 V
Z stroke
LCb setrgbcolor
140 2646 M
currentpoint gsave translate 90 rotate 0 0 M
(Number of L1 Data Cache References) Cshow
grestore
LTb
LCb setrgbcolor
3670 70 M
(Message Size \(bytes\)) Cshow
LTb
1.000 UP
1.000 UL
LTb
1.000 UL
LT0
378 4308 M
652 -184 V
503 17 V
453 637 V
431 -40 V
421 6 V
416 17 V
414 -220 V
412 -25 V
412 -6 V
412 -245 V
412 -28 V
411 -28 V
412 -54 V
411 139 V
412 -30 V
stroke
LT1
378 1311 M
652 213 V
503 -81 V
1986 781 L
431 152 V
2838 809 L
3254 622 L
414 102 V
412 12 V
412 88 V
412 240 V
412 272 V
411 144 V
412 240 V
411 98 V
412 15 V
stroke
LT2
378 2449 M
652 61 V
503 -46 V
453 -710 V
431 58 V
421 107 V
416 -205 V
414 116 V
412 109 V
412 -174 V
412 199 V
412 608 V
411 -70 V
412 394 V
411 150 V
412 50 V
stroke
LT3
378 1703 M
652 7 V
503 -53 V
453 -653 V
431 -44 V
421 -54 V
416 17 V
414 0 V
412 196 V
4492 914 L
412 393 V
412 278 V
411 119 V
412 253 V
411 100 V
412 18 V
stroke
LT0
LTb
6311 973 M
(Same core) Rshow
LT0
6395 973 M
399 0 V
-399 31 R
0 -62 V
399 62 R
0 -62 V
378 4095 M
0 414 V
347 4095 M
62 0 V
-62 414 R
62 0 V
621 -572 R
0 364 V
999 3937 M
62 0 V
-62 364 R
62 0 V
472 -298 R
0 270 V
-31 -270 R
62 0 V
-62 270 R
62 0 V
422 433 R
0 143 V
-31 -143 R
62 0 V
-62 143 R
62 0 V
400 -175 R
0 127 V
-31 -127 R
62 0 V
-62 127 R
62 0 V
390 -144 R
0 171 V
-31 -171 R
62 0 V
-62 171 R
62 0 V
385 -182 R
0 226 V
-31 -226 R
62 0 V
-62 226 R
62 0 V
383 -357 R
0 52 V
-31 -52 R
62 0 V
-62 52 R
62 0 V
381 -107 R
0 110 V
-31 -110 R
62 0 V
-62 110 R
62 0 V
381 -191 R
0 257 V
-31 -257 R
62 0 V
-62 257 R
62 0 V
381 -405 R
0 68 V
-31 -68 R
62 0 V
-62 68 R
62 0 V
381 -95 R
0 66 V
-31 -66 R
62 0 V
-62 66 R
62 0 V
380 -130 R
0 137 V
-31 -137 R
62 0 V
-62 137 R
62 0 V
381 -149 R
0 55 V
-31 -55 R
62 0 V
-62 55 R
62 0 V
380 82 R
0 58 V
-31 -58 R
62 0 V
-62 58 R
62 0 V
381 -64 R
0 10 V
-31 -10 R
62 0 V
-62 10 R
62 0 V
378 4308 Pls
1030 4124 Pls
1533 4141 Pls
1986 4778 Pls
2417 4738 Pls
2838 4744 Pls
3254 4761 Pls
3668 4541 Pls
4080 4516 Pls
4492 4510 Pls
4904 4265 Pls
5316 4237 Pls
5727 4209 Pls
6139 4155 Pls
6550 4294 Pls
6962 4264 Pls
6594 973 Pls
1.000 UL
LT1
LTb
6311 833 M
(Same computer) Rshow
LT1
6395 833 M
399 0 V
-399 31 R
0 -62 V
399 62 R
0 -62 V
378 1067 M
0 472 V
347 1067 M
62 0 V
-62 472 R
62 0 V
621 -314 R
0 575 V
999 1225 M
62 0 V
-62 575 R
62 0 V
472 -611 R
0 491 V
-31 -491 R
62 0 V
-62 491 R
62 0 V
1986 420 M
0 687 V
1955 420 M
62 0 V
-62 687 R
62 0 V
2417 677 M
0 493 V
2386 677 M
62 0 V
-62 493 R
62 0 V
2838 486 M
0 619 V
2807 486 M
62 0 V
-62 619 R
62 0 V
3254 517 M
0 206 V
3223 517 M
62 0 V
-62 206 R
62 0 V
383 -30 R
0 61 V
-31 -61 R
62 0 V
-62 61 R
62 0 V
4080 654 M
0 163 V
4049 654 M
62 0 V
-62 163 R
62 0 V
381 -63 R
0 138 V
4461 754 M
62 0 V
-62 138 R
62 0 V
381 150 R
0 44 V
-31 -44 R
62 0 V
-62 44 R
62 0 V
381 227 R
0 45 V
-31 -45 R
62 0 V
-62 45 R
62 0 V
380 101 R
0 42 V
-31 -42 R
62 0 V
-62 42 R
62 0 V
381 191 R
0 55 V
-31 -55 R
62 0 V
-62 55 R
62 0 V
380 54 R
0 33 V
-31 -33 R
62 0 V
-62 33 R
62 0 V
381 -27 R
0 52 V
-31 -52 R
62 0 V
-62 52 R
62 0 V
378 1311 Crs
1030 1524 Crs
1533 1443 Crs
1986 781 Crs
2417 933 Crs
2838 809 Crs
3254 622 Crs
3668 724 Crs
4080 736 Crs
4492 824 Crs
4904 1064 Crs
5316 1336 Crs
5727 1480 Crs
6139 1720 Crs
6550 1818 Crs
6962 1833 Crs
6594 833 Crs
1.000 UL
LT2
LTb
6311 693 M
(Same die) Rshow
LT2
6395 693 M
399 0 V
-399 31 R
0 -62 V
399 62 R
0 -62 V
378 2374 M
0 149 V
347 2374 M
62 0 V
-62 149 R
62 0 V
621 -148 R
0 264 V
999 2375 M
62 0 V
-62 264 R
62 0 V
472 -270 R
0 188 V
-31 -188 R
62 0 V
-62 188 R
62 0 V
422 -892 R
0 176 V
-31 -176 R
62 0 V
-62 176 R
62 0 V
400 -173 R
0 281 V
-31 -281 R
62 0 V
-62 281 R
62 0 V
390 -107 R
0 152 V
-31 -152 R
62 0 V
-62 152 R
62 0 V
385 -388 R
0 213 V
-31 -213 R
62 0 V
-62 213 R
62 0 V
383 -33 R
0 87 V
-31 -87 R
62 0 V
-62 87 R
62 0 V
381 50 R
0 33 V
-31 -33 R
62 0 V
-62 33 R
62 0 V
381 -240 R
0 98 V
-31 -98 R
62 0 V
-62 98 R
62 0 V
381 108 R
0 84 V
-31 -84 R
62 0 V
-62 84 R
62 0 V
381 512 R
0 107 V
-31 -107 R
62 0 V
-62 107 R
62 0 V
380 -211 R
0 173 V
-31 -173 R
62 0 V
-62 173 R
62 0 V
381 298 R
0 23 V
-31 -23 R
62 0 V
-62 23 R
62 0 V
380 118 R
0 40 V
-31 -40 R
62 0 V
-62 40 R
62 0 V
381 7 R
0 46 V
-31 -46 R
62 0 V
-62 46 R
62 0 V
378 2449 Star
1030 2510 Star
1533 2464 Star
1986 1754 Star
2417 1812 Star
2838 1919 Star
3254 1714 Star
3668 1830 Star
4080 1939 Star
4492 1765 Star
4904 1964 Star
5316 2572 Star
5727 2502 Star
6139 2896 Star
6550 3046 Star
6962 3096 Star
6594 693 Star
1.000 UL
LT3
LTb
6311 553 M
(Same processor) Rshow
LT3
6395 553 M
399 0 V
-399 31 R
0 -62 V
399 62 R
0 -62 V
378 1514 M
0 368 V
347 1514 M
62 0 V
-62 368 R
62 0 V
621 -493 R
0 614 V
999 1389 M
62 0 V
-62 614 R
62 0 V
472 -584 R
0 460 V
-31 -460 R
62 0 V
-62 460 R
62 0 V
1986 760 M
0 471 V
1955 760 M
62 0 V
-62 471 R
62 0 V
2417 813 M
0 288 V
2386 813 M
62 0 V
-62 288 R
62 0 V
2838 670 M
0 457 V
2807 670 M
62 0 V
-62 457 R
62 0 V
3254 843 M
0 159 V
3223 843 M
62 0 V
-62 159 R
62 0 V
3668 859 M
0 128 V
3637 859 M
62 0 V
-62 128 R
62 0 V
381 73 R
0 117 V
-31 -117 R
62 0 V
-62 117 R
62 0 V
4492 799 M
0 225 V
4461 799 M
62 0 V
-62 225 R
62 0 V
381 218 R
0 129 V
-31 -129 R
62 0 V
-62 129 R
62 0 V
381 171 R
0 85 V
-31 -85 R
62 0 V
-62 85 R
62 0 V
380 65 R
0 24 V
-31 -24 R
62 0 V
-62 24 R
62 0 V
381 222 R
0 39 V
-31 -39 R
62 0 V
-62 39 R
62 0 V
380 63 R
0 33 V
-31 -33 R
62 0 V
-62 33 R
62 0 V
381 -17 R
0 39 V
-31 -39 R
62 0 V
-62 39 R
62 0 V
378 1703 Box
1030 1710 Box
1533 1657 Box
1986 1004 Box
2417 960 Box
2838 906 Box
3254 923 Box
3668 923 Box
4080 1119 Box
4492 914 Box
4904 1307 Box
5316 1585 Box
5727 1704 Box
6139 1957 Box
6550 2057 Box
6962 2075 Box
6594 553 Box
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
