%!PS-Adobe-2.0
%%Title: Wed.26.03.08-11.57.32/msg_size_vs_TOTAL_IC_REF.eps
%%Creator: gnuplot 4.2 patchlevel 0
%%CreationDate: Fri Mar 28 13:09:08 2008
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (Wed.26.03.08-11.57.32/msg_size_vs_TOTAL_IC_REF.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 0)
  /Author (Matthew Faulkner,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Fri Mar 28 13:09:08 2008)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
378 770 M
31 0 V
6553 0 R
-31 0 V
378 1846 M
31 0 V
6553 0 R
-31 0 V
378 2609 M
31 0 V
6553 0 R
-31 0 V
378 3202 M
31 0 V
6553 0 R
-31 0 V
378 3685 M
31 0 V
6553 0 R
-31 0 V
378 4094 M
31 0 V
6553 0 R
-31 0 V
378 4449 M
31 0 V
6553 0 R
-31 0 V
378 4761 M
31 0 V
6553 0 R
-31 0 V
stroke
LTa
378 420 M
0 4452 V
stroke
LTb
378 420 M
0 63 V
0 4389 R
0 -63 V
378 280 M
( 1) Cshow
1.000 UL
LTb
790 420 M
0 31 V
0 4421 R
0 -31 V
1333 420 M
0 31 V
0 4421 R
0 -31 V
1613 420 M
0 31 V
0 4421 R
0 -31 V
stroke
LTa
1745 420 M
0 4452 V
stroke
LTb
1745 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
( 10) Cshow
1.000 UL
LTb
2156 420 M
0 31 V
0 4421 R
0 -31 V
2700 420 M
0 31 V
0 4421 R
0 -31 V
2979 420 M
0 31 V
0 4421 R
0 -31 V
stroke
LTa
3112 420 M
0 4452 V
stroke
LTb
3112 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
( 100) Cshow
1.000 UL
LTb
3523 420 M
0 31 V
0 4421 R
0 -31 V
4067 420 M
0 31 V
0 4421 R
0 -31 V
4346 420 M
0 31 V
0 4421 R
0 -31 V
stroke
LTa
4479 420 M
0 4452 V
stroke
LTb
4479 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
( 1000) Cshow
1.000 UL
LTb
4890 420 M
0 31 V
0 4421 R
0 -31 V
5434 420 M
0 31 V
0 4421 R
0 -31 V
5713 420 M
0 31 V
0 4421 R
0 -31 V
stroke
LTa
5846 420 M
0 63 V
0 560 R
0 3829 V
stroke
LTb
5846 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
( 10000) Cshow
1.000 UL
LTb
6257 420 M
0 31 V
0 4421 R
0 -31 V
6801 420 M
0 31 V
0 4421 R
0 -31 V
stroke
378 4872 N
378 420 L
6584 0 V
0 4452 V
-6584 0 V
Z stroke
LCb setrgbcolor
140 2646 M
currentpoint gsave translate 90 rotate 0 0 M
(Number of L1 Instruction Cache References) Cshow
grestore
LTb
LCb setrgbcolor
3670 70 M
(Message Size \(bytes\)) Cshow
LTb
1.000 UP
1.000 UL
LTb
1.000 UL
LT0
378 4183 M
652 -66 V
503 -7 V
453 417 V
431 -8 V
421 -157 V
416 438 V
414 7 V
412 -179 V
412 -556 V
412 242 V
412 31 V
411 -119 V
412 30 V
411 45 V
412 -30 V
stroke
LT1
378 2261 M
652 -4 V
503 -84 V
453 -678 V
431 18 V
421 74 V
416 -216 V
414 10 V
412 30 V
412 -26 V
412 55 V
412 -54 V
411 307 V
412 -1 V
411 17 V
412 -9 V
stroke
LT2
378 1321 M
652 -16 V
503 197 V
453 160 V
431 -123 V
421 30 V
416 -473 V
414 1 V
412 138 V
412 -21 V
412 490 V
412 -96 V
411 147 V
412 126 V
411 -13 V
412 68 V
stroke
LT3
378 2034 M
652 8 V
503 5 V
453 -472 V
431 86 V
421 -58 V
416 -171 V
414 -112 V
412 134 V
412 -171 V
412 199 V
412 198 V
411 42 V
412 -89 V
411 62 V
412 135 V
stroke
LT0
LTb
6311 973 M
(Same core) Rshow
LT0
6395 973 M
399 0 V
-399 31 R
0 -62 V
399 62 R
0 -62 V
378 3902 M
0 534 V
347 3902 M
62 0 V
-62 534 R
62 0 V
621 -585 R
0 508 V
999 3851 M
62 0 V
-62 508 R
62 0 V
472 -457 R
0 401 V
-31 -401 R
62 0 V
-62 401 R
62 0 V
422 130 R
0 186 V
-31 -186 R
62 0 V
-62 186 R
62 0 V
400 -282 R
0 353 V
-31 -353 R
62 0 V
-62 353 R
62 0 V
390 -528 R
0 386 V
-31 -386 R
62 0 V
-62 386 R
62 0 V
385 179 R
0 145 V
-31 -145 R
62 0 V
-62 145 R
62 0 V
383 -123 R
0 114 V
-31 -114 R
62 0 V
-62 114 R
62 0 V
381 -290 R
0 109 V
-31 -109 R
62 0 V
-62 109 R
62 0 V
381 -658 R
0 94 V
-31 -94 R
62 0 V
-62 94 R
62 0 V
381 143 R
0 106 V
-31 -106 R
62 0 V
-62 106 R
62 0 V
381 -88 R
0 131 V
-31 -131 R
62 0 V
-62 131 R
62 0 V
380 -290 R
0 208 V
-31 -208 R
62 0 V
-62 208 R
62 0 V
381 -191 R
0 233 V
-31 -233 R
62 0 V
-62 233 R
62 0 V
380 -149 R
0 158 V
-31 -158 R
62 0 V
-62 158 R
62 0 V
381 -159 R
0 101 V
-31 -101 R
62 0 V
-62 101 R
62 0 V
378 4183 Pls
1030 4117 Pls
1533 4110 Pls
1986 4527 Pls
2417 4519 Pls
2838 4362 Pls
3254 4800 Pls
3668 4807 Pls
4080 4628 Pls
4492 4072 Pls
4904 4314 Pls
5316 4345 Pls
5727 4226 Pls
6139 4256 Pls
6550 4301 Pls
6962 4271 Pls
6594 973 Pls
1.000 UL
LT1
LTb
6311 833 M
(Same computer) Rshow
LT1
6395 833 M
399 0 V
-399 31 R
0 -62 V
399 62 R
0 -62 V
378 2242 M
0 38 V
-31 -38 R
62 0 V
-62 38 R
62 0 V
621 -116 R
0 182 V
999 2164 M
62 0 V
-62 182 R
62 0 V
472 -422 R
0 476 V
-31 -476 R
62 0 V
-62 476 R
62 0 V
1986 1381 M
0 223 V
-31 -223 R
62 0 V
-62 223 R
62 0 V
400 -146 R
0 110 V
-31 -110 R
62 0 V
-62 110 R
62 0 V
390 -175 R
0 375 V
-31 -375 R
62 0 V
-62 375 R
62 0 V
385 -527 R
0 253 V
-31 -253 R
62 0 V
-62 253 R
62 0 V
383 -209 R
0 188 V
-31 -188 R
62 0 V
-62 188 R
62 0 V
381 -101 R
0 77 V
-31 -77 R
62 0 V
-62 77 R
62 0 V
381 -140 R
0 151 V
-31 -151 R
62 0 V
-62 151 R
62 0 V
381 -120 R
0 196 V
-31 -196 R
62 0 V
-62 196 R
62 0 V
381 -235 R
0 167 V
-31 -167 R
62 0 V
-62 167 R
62 0 V
380 80 R
0 282 V
-31 -282 R
62 0 V
-62 282 R
62 0 V
381 -236 R
0 193 V
-31 -193 R
62 0 V
-62 193 R
62 0 V
380 -150 R
0 142 V
-31 -142 R
62 0 V
-62 142 R
62 0 V
381 -259 R
0 347 V
-31 -347 R
62 0 V
-62 347 R
62 0 V
378 2261 Crs
1030 2257 Crs
1533 2173 Crs
1986 1495 Crs
2417 1513 Crs
2838 1587 Crs
3254 1371 Crs
3668 1381 Crs
4080 1411 Crs
4492 1385 Crs
4904 1440 Crs
5316 1386 Crs
5727 1693 Crs
6139 1692 Crs
6550 1709 Crs
6962 1700 Crs
6594 833 Crs
1.000 UL
LT2
LTb
6311 693 M
(Same die) Rshow
LT2
6395 693 M
399 0 V
-399 31 R
0 -62 V
399 62 R
0 -62 V
378 420 M
0 1573 V
347 420 M
62 0 V
347 1993 M
62 0 V
1030 434 M
0 1526 V
999 434 M
62 0 V
999 1960 M
62 0 V
472 -892 R
0 806 V
-31 -806 R
62 0 V
-62 806 R
62 0 V
422 -401 R
0 365 V
-31 -365 R
62 0 V
-62 365 R
62 0 V
400 -407 R
0 212 V
-31 -212 R
62 0 V
-62 212 R
62 0 V
390 -413 R
0 640 V
-31 -640 R
62 0 V
-62 640 R
62 0 V
385 -826 R
0 102 V
-31 -102 R
62 0 V
-62 102 R
62 0 V
383 -106 R
0 111 V
-31 -111 R
62 0 V
-62 111 R
62 0 V
381 -47 R
0 257 V
-31 -257 R
62 0 V
-62 257 R
62 0 V
381 -255 R
0 212 V
-31 -212 R
62 0 V
-62 212 R
62 0 V
381 357 R
0 58 V
-31 -58 R
62 0 V
-62 58 R
62 0 V
381 -204 R
0 155 V
-31 -155 R
62 0 V
-62 155 R
62 0 V
380 -75 R
0 285 V
-31 -285 R
62 0 V
-62 285 R
62 0 V
381 -49 R
0 71 V
-31 -71 R
62 0 V
-62 71 R
62 0 V
380 -94 R
0 91 V
-31 -91 R
62 0 V
-62 91 R
62 0 V
381 -92 R
0 224 V
-31 -224 R
62 0 V
-62 224 R
62 0 V
378 1321 Star
1030 1305 Star
1533 1502 Star
1986 1662 Star
2417 1539 Star
2838 1569 Star
3254 1096 Star
3668 1097 Star
4080 1235 Star
4492 1214 Star
4904 1704 Star
5316 1608 Star
5727 1755 Star
6139 1881 Star
6550 1868 Star
6962 1936 Star
6594 693 Star
1.000 UL
LT3
LTb
6311 553 M
(Same processor) Rshow
LT3
6395 553 M
399 0 V
-399 31 R
0 -62 V
399 62 R
0 -62 V
378 1761 M
0 520 V
347 1761 M
62 0 V
-62 520 R
62 0 V
621 -591 R
0 662 V
999 1690 M
62 0 V
-62 662 R
62 0 V
472 -570 R
0 506 V
-31 -506 R
62 0 V
-62 506 R
62 0 V
422 -943 R
0 442 V
-31 -442 R
62 0 V
-62 442 R
62 0 V
400 -242 R
0 226 V
-31 -226 R
62 0 V
-62 226 R
62 0 V
390 -287 R
0 232 V
-31 -232 R
62 0 V
-62 232 R
62 0 V
385 -360 R
0 151 V
-31 -151 R
62 0 V
-62 151 R
62 0 V
383 -236 R
0 97 V
-31 -97 R
62 0 V
-62 97 R
62 0 V
381 10 R
0 150 V
-31 -150 R
62 0 V
-62 150 R
62 0 V
381 -271 R
0 53 V
-31 -53 R
62 0 V
-62 53 R
62 0 V
381 92 R
0 158 V
-31 -158 R
62 0 V
-62 158 R
62 0 V
381 30 R
0 177 V
-31 -177 R
62 0 V
-62 177 R
62 0 V
380 -172 R
0 247 V
-31 -247 R
62 0 V
-62 247 R
62 0 V
381 -328 R
0 232 V
-31 -232 R
62 0 V
-62 232 R
62 0 V
380 -131 R
0 159 V
-31 -159 R
62 0 V
-62 159 R
62 0 V
381 -25 R
0 161 V
-31 -161 R
62 0 V
-62 161 R
62 0 V
378 2034 Box
1030 2042 Box
1533 2047 Box
1986 1575 Box
2417 1661 Box
2838 1603 Box
3254 1432 Box
3668 1320 Box
4080 1454 Box
4492 1283 Box
4904 1482 Box
5316 1680 Box
5727 1722 Box
6139 1633 Box
6550 1695 Box
6962 1830 Box
6594 553 Box
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
