%!PS-Adobe-2.0
%%Title: Wed.26.03.08-11.57.32/msg_size_vs_Total_time.eps
%%Creator: gnuplot 4.2 patchlevel 0
%%CreationDate: Fri Mar 28 13:08:29 2008
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (Wed.26.03.08-11.57.32/msg_size_vs_Total_time.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 0)
  /Author (Matthew Faulkner,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Fri Mar 28 13:08:29 2008)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
630 426 M
6332 0 V
stroke
LTb
630 426 M
63 0 V
6269 0 R
-63 0 V
546 426 M
( 30) Rshow
1.000 UL
LTb
1.000 UL
LTa
630 1155 M
6332 0 V
stroke
LTb
630 1155 M
63 0 V
6269 0 R
-63 0 V
-6353 0 R
( 35) Rshow
1.000 UL
LTb
1.000 UL
LTa
630 1884 M
6332 0 V
stroke
LTb
630 1884 M
63 0 V
6269 0 R
-63 0 V
-6353 0 R
( 40) Rshow
1.000 UL
LTb
1.000 UL
LTa
630 2613 M
6332 0 V
stroke
LTb
630 2613 M
63 0 V
6269 0 R
-63 0 V
-6353 0 R
( 45) Rshow
1.000 UL
LTb
1.000 UL
LTa
630 3342 M
6332 0 V
stroke
LTb
630 3342 M
63 0 V
6269 0 R
-63 0 V
-6353 0 R
( 50) Rshow
1.000 UL
LTb
1.000 UL
LTa
630 4071 M
6332 0 V
stroke
LTb
630 4071 M
63 0 V
6269 0 R
-63 0 V
-6353 0 R
( 55) Rshow
1.000 UL
LTb
1.000 UL
LTa
630 4800 M
6332 0 V
stroke
LTb
630 4800 M
63 0 V
6269 0 R
-63 0 V
-6353 0 R
( 60) Rshow
1.000 UL
LTb
1.000 UL
LTa
630 420 M
0 4452 V
stroke
LTb
630 420 M
0 63 V
0 4389 R
0 -63 V
630 280 M
( 1) Cshow
1.000 UL
LTb
1026 420 M
0 31 V
0 4421 R
0 -31 V
1549 420 M
0 31 V
0 4421 R
0 -31 V
1817 420 M
0 31 V
0 4421 R
0 -31 V
stroke
LTa
1945 420 M
0 4452 V
stroke
LTb
1945 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
( 10) Cshow
1.000 UL
LTb
2340 420 M
0 31 V
0 4421 R
0 -31 V
2864 420 M
0 31 V
0 4421 R
0 -31 V
3132 420 M
0 31 V
0 4421 R
0 -31 V
stroke
LTa
3259 420 M
0 4452 V
stroke
LTb
3259 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
( 100) Cshow
1.000 UL
LTb
3655 420 M
0 31 V
0 4421 R
0 -31 V
4178 420 M
0 31 V
0 4421 R
0 -31 V
4447 420 M
0 31 V
0 4421 R
0 -31 V
stroke
LTa
4574 420 M
0 4452 V
stroke
LTb
4574 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
( 1000) Cshow
1.000 UL
LTb
4970 420 M
0 31 V
0 4421 R
0 -31 V
5493 420 M
0 31 V
0 4421 R
0 -31 V
5761 420 M
0 31 V
0 4421 R
0 -31 V
stroke
LTa
5889 420 M
0 63 V
0 560 R
0 3829 V
stroke
LTb
5889 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
( 10000) Cshow
1.000 UL
LTb
6284 420 M
0 31 V
0 4421 R
0 -31 V
6808 420 M
0 31 V
0 4421 R
0 -31 V
stroke
630 4872 N
630 420 L
6332 0 V
0 4452 V
-6332 0 V
Z stroke
LCb setrgbcolor
140 2646 M
currentpoint gsave translate 90 rotate 0 0 M
(Total_time) Cshow
grestore
LTb
LCb setrgbcolor
3796 70 M
(Message Size \(bytes\)) Cshow
LTb
1.000 UP
1.000 UL
LTb
1.000 UL
LT0
630 435 M
627 0 V
484 0 V
435 0 V
415 -1 V
405 0 V
400 0 V
398 0 V
397 1 V
396 1 V
396 -1 V
396 1 V
396 -1 V
395 -2 V
396 2 V
396 0 V
stroke
LT1
630 4518 M
627 2 V
484 -32 V
435 70 V
415 11 V
405 20 V
400 9 V
398 -5 V
397 -21 V
4587 3153 L
396 688 V
396 588 V
396 -405 V
395 62 V
396 110 V
396 -17 V
stroke
LT2
630 4418 M
627 28 V
484 -94 V
435 166 V
415 -52 V
405 -32 V
400 81 V
398 7 V
397 45 V
4587 3091 L
396 64 V
396 1086 V
396 -554 V
395 216 V
396 268 V
396 -93 V
stroke
LT3
630 4498 M
627 17 V
484 -17 V
435 41 V
415 39 V
405 16 V
400 9 V
398 -12 V
397 -29 V
4587 3215 L
396 592 V
396 633 V
396 -297 V
395 13 V
396 127 V
396 -28 V
stroke
LT0
LTb
6311 973 M
(Same core) Rshow
LT0
6395 973 M
399 0 V
-399 31 R
0 -62 V
399 62 R
0 -62 V
630 431 M
0 8 V
-31 -8 R
62 0 V
-62 8 R
62 0 V
596 -7 R
0 6 V
-31 -6 R
62 0 V
-62 6 R
62 0 V
453 -6 R
0 6 V
-31 -6 R
62 0 V
-62 6 R
62 0 V
404 -8 R
0 10 V
-31 -10 R
62 0 V
-62 10 R
62 0 V
384 -11 R
0 10 V
-31 -10 R
62 0 V
-62 10 R
62 0 V
374 -9 R
0 8 V
-31 -8 R
62 0 V
-62 8 R
62 0 V
369 -8 R
0 8 V
-31 -8 R
62 0 V
-62 8 R
62 0 V
367 -6 R
0 5 V
-31 -5 R
62 0 V
-62 5 R
62 0 V
366 -6 R
0 9 V
-31 -9 R
62 0 V
-62 9 R
62 0 V
365 -9 R
0 9 V
-31 -9 R
62 0 V
-62 9 R
62 0 V
365 -8 R
0 7 V
-31 -7 R
62 0 V
-62 7 R
62 0 V
365 -9 R
0 12 V
-31 -12 R
62 0 V
-62 12 R
62 0 V
365 -11 R
0 8 V
-31 -8 R
62 0 V
-62 8 R
62 0 V
364 -19 R
0 26 V
-31 -26 R
62 0 V
-62 26 R
62 0 V
365 -15 R
0 7 V
-31 -7 R
62 0 V
-62 7 R
62 0 V
365 -6 R
0 6 V
-31 -6 R
62 0 V
-62 6 R
62 0 V
630 435 Pls
1257 435 Pls
1741 435 Pls
2176 435 Pls
2591 434 Pls
2996 434 Pls
3396 434 Pls
3794 434 Pls
4191 435 Pls
4587 436 Pls
4983 435 Pls
5379 436 Pls
5775 435 Pls
6170 433 Pls
6566 435 Pls
6962 435 Pls
6594 973 Pls
1.000 UL
LT1
LTb
6311 833 M
(Same computer) Rshow
LT1
6395 833 M
399 0 V
-399 31 R
0 -62 V
399 62 R
0 -62 V
630 4260 M
0 515 V
599 4260 M
62 0 V
-62 515 R
62 0 V
596 -526 R
0 542 V
-31 -542 R
62 0 V
-62 542 R
62 0 V
453 -630 R
0 655 V
-31 -655 R
62 0 V
-62 655 R
62 0 V
404 -507 R
0 498 V
-31 -498 R
62 0 V
-62 498 R
62 0 V
384 -471 R
0 466 V
-31 -466 R
62 0 V
-62 466 R
62 0 V
374 -448 R
0 470 V
-31 -470 R
62 0 V
-62 470 R
62 0 V
369 -460 R
0 468 V
-31 -468 R
62 0 V
-62 468 R
62 0 V
367 -489 R
0 499 V
-31 -499 R
62 0 V
-62 499 R
62 0 V
366 -535 R
0 530 V
-31 -530 R
62 0 V
-62 530 R
62 0 V
4587 3013 M
0 279 V
-31 -279 R
62 0 V
-62 279 R
62 0 V
365 285 R
0 528 V
-31 -528 R
62 0 V
-62 528 R
62 0 V
365 112 R
0 424 V
-31 -424 R
62 0 V
-62 424 R
62 0 V
365 -763 R
0 293 V
-31 -293 R
62 0 V
-62 293 R
62 0 V
364 -243 R
0 315 V
-31 -315 R
62 0 V
-62 315 R
62 0 V
365 -198 R
0 302 V
-31 -302 R
62 0 V
-62 302 R
62 0 V
365 -274 R
0 213 V
-31 -213 R
62 0 V
-62 213 R
62 0 V
630 4518 Crs
1257 4520 Crs
1741 4488 Crs
2176 4558 Crs
2591 4569 Crs
2996 4589 Crs
3396 4598 Crs
3794 4593 Crs
4191 4572 Crs
4587 3153 Crs
4983 3841 Crs
5379 4429 Crs
5775 4024 Crs
6170 4086 Crs
6566 4196 Crs
6962 4179 Crs
6594 833 Crs
1.000 UL
LT2
LTb
6311 693 M
(Same die) Rshow
LT2
6395 693 M
399 0 V
-399 31 R
0 -62 V
399 62 R
0 -62 V
630 4105 M
0 626 V
599 4105 M
62 0 V
-62 626 R
62 0 V
596 -590 R
0 610 V
-31 -610 R
62 0 V
-62 610 R
62 0 V
453 -759 R
0 721 V
-31 -721 R
62 0 V
-62 721 R
62 0 V
404 -441 R
0 492 V
-31 -492 R
62 0 V
-62 492 R
62 0 V
384 -573 R
0 551 V
-31 -551 R
62 0 V
-62 551 R
62 0 V
374 -570 R
0 523 V
-31 -523 R
62 0 V
-62 523 R
62 0 V
369 -462 R
0 564 V
-31 -564 R
62 0 V
-62 564 R
62 0 V
367 -598 R
0 646 V
-31 -646 R
62 0 V
-62 646 R
62 0 V
366 -582 R
0 609 V
-31 -609 R
62 0 V
-62 609 R
62 0 V
4587 2838 M
0 505 V
-31 -505 R
62 0 V
-62 505 R
62 0 V
365 -338 R
0 299 V
-31 -299 R
62 0 V
-62 299 R
62 0 V
365 778 R
0 317 V
-31 -317 R
62 0 V
-62 317 R
62 0 V
5775 3218 M
0 937 V
-31 -937 R
62 0 V
-62 937 R
62 0 V
364 -403 R
0 301 V
-31 -301 R
62 0 V
-62 301 R
62 0 V
365 -76 R
0 388 V
-31 -388 R
62 0 V
-62 388 R
62 0 V
365 -407 R
0 240 V
-31 -240 R
62 0 V
-62 240 R
62 0 V
630 4418 Star
1257 4446 Star
1741 4352 Star
2176 4518 Star
2591 4466 Star
2996 4434 Star
3396 4515 Star
3794 4522 Star
4191 4567 Star
4587 3091 Star
4983 3155 Star
5379 4241 Star
5775 3687 Star
6170 3903 Star
6566 4171 Star
6962 4078 Star
6594 693 Star
1.000 UL
LT3
LTb
6311 553 M
(Same processor) Rshow
LT3
6395 553 M
399 0 V
-399 31 R
0 -62 V
399 62 R
0 -62 V
630 4202 M
0 592 V
599 4202 M
62 0 V
-62 592 R
62 0 V
596 -567 R
0 576 V
-31 -576 R
62 0 V
-62 576 R
62 0 V
453 -626 R
0 643 V
-31 -643 R
62 0 V
-62 643 R
62 0 V
404 -535 R
0 507 V
-31 -507 R
62 0 V
-62 507 R
62 0 V
384 -457 R
0 487 V
-31 -487 R
62 0 V
-62 487 R
62 0 V
374 -460 R
0 464 V
-31 -464 R
62 0 V
-62 464 R
62 0 V
369 -461 R
0 476 V
-31 -476 R
62 0 V
-62 476 R
62 0 V
367 -504 R
0 509 V
-31 -509 R
62 0 V
-62 509 R
62 0 V
366 -536 R
0 504 V
-31 -504 R
62 0 V
-62 504 R
62 0 V
4587 3060 M
0 309 V
-31 -309 R
62 0 V
-62 309 R
62 0 V
365 129 R
0 617 V
-31 -617 R
62 0 V
-62 617 R
62 0 V
365 99 R
0 451 V
-31 -451 R
62 0 V
-62 451 R
62 0 V
365 -681 R
0 317 V
-31 -317 R
62 0 V
-62 317 R
62 0 V
364 -307 R
0 325 V
-31 -325 R
62 0 V
-62 325 R
62 0 V
365 -223 R
0 374 V
-31 -374 R
62 0 V
-62 374 R
62 0 V
365 -348 R
0 267 V
-31 -267 R
62 0 V
-62 267 R
62 0 V
630 4498 Box
1257 4515 Box
1741 4498 Box
2176 4539 Box
2591 4578 Box
2996 4594 Box
3396 4603 Box
3794 4591 Box
4191 4562 Box
4587 3215 Box
4983 3807 Box
5379 4440 Box
5775 4143 Box
6170 4156 Box
6566 4283 Box
6962 4255 Box
6594 553 Box
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
