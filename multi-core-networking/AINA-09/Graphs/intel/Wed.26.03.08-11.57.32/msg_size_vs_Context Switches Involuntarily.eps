%!PS-Adobe-2.0
%%Title: Wed.26.03.08-11.57.32/msg_size_vs_Context Switches Involuntarily.eps
%%Creator: gnuplot 4.2 patchlevel 0
%%CreationDate: Fri Mar 28 13:08:37 2008
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (Wed.26.03.08-11.57.32/msg_size_vs_Context Switches Involuntarily.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 0)
  /Author (Matthew Faulkner,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Fri Mar 28 13:08:37 2008)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
966 636 M
31 0 V
5965 0 R
-31 0 V
stroke
LTa
966 759 M
5996 0 V
stroke
LTb
966 759 M
63 0 V
5933 0 R
-63 0 V
882 759 M
( 1000) Rshow
1.000 UL
LTb
966 1143 M
31 0 V
5965 0 R
-31 0 V
966 1649 M
31 0 V
5965 0 R
-31 0 V
966 1909 M
31 0 V
5965 0 R
-31 0 V
stroke
LTa
966 2033 M
5996 0 V
stroke
LTb
966 2033 M
63 0 V
5933 0 R
-63 0 V
-6017 0 R
( 10000) Rshow
1.000 UL
LTb
966 2416 M
31 0 V
5965 0 R
-31 0 V
966 2923 M
31 0 V
5965 0 R
-31 0 V
966 3183 M
31 0 V
5965 0 R
-31 0 V
stroke
LTa
966 3306 M
5996 0 V
stroke
LTb
966 3306 M
63 0 V
5933 0 R
-63 0 V
-6017 0 R
( 100000) Rshow
1.000 UL
LTb
966 3689 M
31 0 V
5965 0 R
-31 0 V
966 4196 M
31 0 V
5965 0 R
-31 0 V
966 4456 M
31 0 V
5965 0 R
-31 0 V
stroke
LTa
966 4579 M
4169 0 V
1743 0 R
84 0 V
stroke
LTb
966 4579 M
63 0 V
5933 0 R
-63 0 V
-6017 0 R
( 1e+06) Rshow
1.000 UL
LTb
1.000 UL
LTa
966 420 M
0 4452 V
stroke
LTb
966 420 M
0 63 V
0 4389 R
0 -63 V
966 280 M
( 1) Cshow
1.000 UL
LTb
1341 420 M
0 31 V
0 4421 R
0 -31 V
1836 420 M
0 31 V
0 4421 R
0 -31 V
2090 420 M
0 31 V
0 4421 R
0 -31 V
stroke
LTa
2211 420 M
0 4452 V
stroke
LTb
2211 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
( 10) Cshow
1.000 UL
LTb
2586 420 M
0 31 V
0 4421 R
0 -31 V
3081 420 M
0 31 V
0 4421 R
0 -31 V
3335 420 M
0 31 V
0 4421 R
0 -31 V
stroke
LTa
3456 420 M
0 4452 V
stroke
LTb
3456 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
( 100) Cshow
1.000 UL
LTb
3831 420 M
0 31 V
0 4421 R
0 -31 V
4326 420 M
0 31 V
0 4421 R
0 -31 V
4580 420 M
0 31 V
0 4421 R
0 -31 V
stroke
LTa
4701 420 M
0 4452 V
stroke
LTb
4701 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
( 1000) Cshow
1.000 UL
LTb
5075 420 M
0 31 V
0 4421 R
0 -31 V
5571 420 M
0 31 V
0 4421 R
0 -31 V
5825 420 M
0 31 V
0 4421 R
0 -31 V
stroke
LTa
5946 420 M
0 3829 V
0 560 R
0 63 V
stroke
LTb
5946 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
( 10000) Cshow
1.000 UL
LTb
6320 420 M
0 31 V
0 4421 R
0 -31 V
6816 420 M
0 31 V
0 4421 R
0 -31 V
stroke
966 4872 N
966 420 L
5996 0 V
0 4452 V
-5996 0 V
Z stroke
LCb setrgbcolor
140 2646 M
currentpoint gsave translate 90 rotate 0 0 M
(Number of Involuntarily Context Switchs) Cshow
grestore
LTb
LCb setrgbcolor
3964 70 M
(Message Size \(bytes\)) Cshow
LTb
1.000 UP
1.000 UL
LTb
1.000 UL
LT0
966 1306 M
594 847 V
458 296 V
412 2087 V
393 105 V
383 28 V
379 -28 V
377 -51 V
376 13 V
375 194 V
375 -209 V
375 -203 V
375 -241 V
374 -318 V
375 -319 V
375 -356 V
stroke
LT1
966 590 M
594 -11 V
458 9 V
412 13 V
393 -10 V
383 7 V
379 -16 V
377 9 V
376 -9 V
375 -73 V
375 30 V
375 38 V
375 -22 V
374 1 V
375 1 V
375 10 V
stroke
LT2
966 563 M
594 -6 V
458 -6 V
412 20 V
393 -13 V
383 8 V
379 0 V
377 -8 V
376 4 V
4713 455 L
375 6 V
375 83 V
375 -41 V
374 15 V
375 20 V
375 -13 V
stroke
LT3
966 594 M
594 -5 V
458 3 V
412 -7 V
393 -4 V
383 9 V
379 -15 V
377 9 V
376 -7 V
375 -71 V
375 35 V
375 51 V
375 -32 V
374 12 V
375 -8 V
375 -2 V
stroke
LT0
LTb
6311 4739 M
(Same core) Rshow
LT0
6395 4739 M
399 0 V
-399 31 R
0 -62 V
399 62 R
0 -62 V
966 420 M
0 1612 V
935 420 M
62 0 V
935 2032 M
62 0 V
1560 420 M
0 2272 V
1529 420 M
62 0 V
-62 2272 R
62 0 V
427 -402 R
0 283 V
-31 -283 R
62 0 V
-62 283 R
62 0 V
381 1626 R
0 544 V
-31 -544 R
62 0 V
-62 544 R
62 0 V
362 -272 R
0 300 V
-31 -300 R
62 0 V
-62 300 R
62 0 V
352 -215 R
0 206 V
-31 -206 R
62 0 V
-62 206 R
62 0 V
348 -234 R
0 206 V
-31 -206 R
62 0 V
-62 206 R
62 0 V
346 -239 R
0 175 V
-31 -175 R
62 0 V
-62 175 R
62 0 V
345 -163 R
0 178 V
-31 -178 R
62 0 V
-62 178 R
62 0 V
344 25 R
0 162 V
-31 -162 R
62 0 V
-62 162 R
62 0 V
344 -388 R
0 192 V
-31 -192 R
62 0 V
-62 192 R
62 0 V
344 -400 R
0 200 V
-31 -200 R
62 0 V
-62 200 R
62 0 V
344 -436 R
0 192 V
-31 -192 R
62 0 V
-62 192 R
62 0 V
343 -506 R
0 184 V
-31 -184 R
62 0 V
-62 184 R
62 0 V
344 -486 R
0 155 V
-31 -155 R
62 0 V
-62 155 R
62 0 V
344 -498 R
0 132 V
-31 -132 R
62 0 V
-62 132 R
62 0 V
966 1306 Pls
1560 2153 Pls
2018 2449 Pls
2430 4536 Pls
2823 4641 Pls
3206 4669 Pls
3585 4641 Pls
3962 4590 Pls
4338 4603 Pls
4713 4797 Pls
5088 4588 Pls
5463 4385 Pls
5838 4144 Pls
6212 3826 Pls
6587 3507 Pls
6962 3151 Pls
6594 4739 Pls
1.000 UL
LT1
LTb
6311 4599 M
(Same computer) Rshow
LT1
6395 4599 M
399 0 V
-399 31 R
0 -62 V
399 62 R
0 -62 V
966 506 M
0 158 V
935 506 M
62 0 V
935 664 M
62 0 V
1560 522 M
0 109 V
1529 522 M
62 0 V
-62 109 R
62 0 V
2018 522 M
0 125 V
1987 522 M
62 0 V
-62 125 R
62 0 V
2430 519 M
0 154 V
2399 519 M
62 0 V
-62 154 R
62 0 V
2823 531 M
0 114 V
2792 531 M
62 0 V
-62 114 R
62 0 V
3206 484 M
0 208 V
3175 484 M
62 0 V
-62 208 R
62 0 V
3585 535 M
0 91 V
-31 -91 R
62 0 V
-62 91 R
62 0 V
3962 519 M
0 136 V
3931 519 M
62 0 V
-62 136 R
62 0 V
4338 525 M
0 108 V
4307 525 M
62 0 V
-62 108 R
62 0 V
4713 433 M
0 143 V
4682 433 M
62 0 V
-62 143 R
62 0 V
5088 476 M
0 120 V
5057 476 M
62 0 V
-62 120 R
62 0 V
344 -92 R
0 137 V
5432 504 M
62 0 V
-62 137 R
62 0 V
5838 502 M
0 101 V
5807 502 M
62 0 V
-62 101 R
62 0 V
6212 501 M
0 105 V
6181 501 M
62 0 V
-62 105 R
62 0 V
6587 505 M
0 99 V
-31 -99 R
62 0 V
-62 99 R
62 0 V
6962 504 M
0 119 V
6931 504 M
62 0 V
-62 119 R
62 0 V
966 590 Crs
1560 579 Crs
2018 588 Crs
2430 601 Crs
2823 591 Crs
3206 598 Crs
3585 582 Crs
3962 591 Crs
4338 582 Crs
4713 509 Crs
5088 539 Crs
5463 577 Crs
5838 555 Crs
6212 556 Crs
6587 557 Crs
6962 567 Crs
6594 4599 Crs
1.000 UL
LT2
LTb
6311 4459 M
(Same die) Rshow
LT2
6395 4459 M
399 0 V
-399 31 R
0 -62 V
399 62 R
0 -62 V
966 525 M
0 73 V
935 525 M
62 0 V
-62 73 R
62 0 V
563 -65 R
0 46 V
-31 -46 R
62 0 V
-62 46 R
62 0 V
427 -65 R
0 71 V
-31 -71 R
62 0 V
-62 71 R
62 0 V
381 -66 R
0 100 V
2399 519 M
62 0 V
-62 100 R
62 0 V
362 -94 R
0 64 V
-31 -64 R
62 0 V
-62 64 R
62 0 V
3206 487 M
0 148 V
3175 487 M
62 0 V
-62 148 R
62 0 V
3585 503 M
0 118 V
3554 503 M
62 0 V
-62 118 R
62 0 V
346 -90 R
0 53 V
-31 -53 R
62 0 V
-62 53 R
62 0 V
345 -45 R
0 44 V
-31 -44 R
62 0 V
-62 44 R
62 0 V
4713 420 M
0 67 V
-31 -67 R
62 0 V
-62 67 R
62 0 V
344 -46 R
0 38 V
-31 -38 R
62 0 V
-62 38 R
62 0 V
344 43 R
0 44 V
-31 -44 R
62 0 V
-62 44 R
62 0 V
5838 461 M
0 81 V
-31 -81 R
62 0 V
-62 81 R
62 0 V
343 -43 R
0 37 V
-31 -37 R
62 0 V
-62 37 R
62 0 V
344 -22 R
0 46 V
-31 -46 R
62 0 V
-62 46 R
62 0 V
6962 453 M
0 136 V
6931 453 M
62 0 V
-62 136 R
62 0 V
966 563 Star
1560 557 Star
2018 551 Star
2430 571 Star
2823 558 Star
3206 566 Star
3585 566 Star
3962 558 Star
4338 562 Star
4713 455 Star
5088 461 Star
5463 544 Star
5838 503 Star
6212 518 Star
6587 538 Star
6962 525 Star
6594 4459 Star
1.000 UL
LT3
LTb
6311 4319 M
(Same processor) Rshow
LT3
6395 4319 M
399 0 V
-399 31 R
0 -62 V
399 62 R
0 -62 V
966 523 M
0 134 V
935 523 M
62 0 V
935 657 M
62 0 V
1560 488 M
0 187 V
1529 488 M
62 0 V
-62 187 R
62 0 V
2018 505 M
0 163 V
1987 505 M
62 0 V
-62 163 R
62 0 V
2430 532 M
0 102 V
2399 532 M
62 0 V
-62 102 R
62 0 V
2823 533 M
0 91 V
-31 -91 R
62 0 V
-62 91 R
62 0 V
352 -91 R
0 109 V
3175 533 M
62 0 V
-62 109 R
62 0 V
3585 538 M
0 71 V
-31 -71 R
62 0 V
-62 71 R
62 0 V
346 -69 R
0 85 V
-31 -85 R
62 0 V
-62 85 R
62 0 V
345 -83 R
0 67 V
-31 -67 R
62 0 V
-62 67 R
62 0 V
4713 447 M
0 112 V
4682 447 M
62 0 V
-62 112 R
62 0 V
344 -79 R
0 116 V
5057 480 M
62 0 V
-62 116 R
62 0 V
344 -78 R
0 140 V
5432 518 M
62 0 V
-62 140 R
62 0 V
5838 499 M
0 116 V
5807 499 M
62 0 V
-62 116 R
62 0 V
6212 500 M
0 135 V
6181 500 M
62 0 V
-62 135 R
62 0 V
6587 513 M
0 98 V
-31 -98 R
62 0 V
-62 98 R
62 0 V
344 -95 R
0 88 V
-31 -88 R
62 0 V
-62 88 R
62 0 V
966 594 Box
1560 589 Box
2018 592 Box
2430 585 Box
2823 581 Box
3206 590 Box
3585 575 Box
3962 584 Box
4338 577 Box
4713 506 Box
5088 541 Box
5463 592 Box
5838 560 Box
6212 572 Box
6587 564 Box
6962 562 Box
6594 4319 Box
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
