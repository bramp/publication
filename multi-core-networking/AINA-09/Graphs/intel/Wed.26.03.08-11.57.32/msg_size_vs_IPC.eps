%!PS-Adobe-2.0
%%Title: Wed.26.03.08-11.57.32/msg_size_vs_IPC.eps
%%Creator: gnuplot 4.2 patchlevel 0
%%CreationDate: Fri Mar 28 13:09:01 2008
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (Wed.26.03.08-11.57.32/msg_size_vs_IPC.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 0)
  /Author (Matthew Faulkner,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Fri Mar 28 13:09:01 2008)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
378 734 M
31 0 V
6553 0 R
-31 0 V
378 2484 M
31 0 V
6553 0 R
-31 0 V
378 3913 M
31 0 V
6553 0 R
-31 0 V
stroke
LTa
378 420 M
0 4452 V
stroke
LTb
378 420 M
0 63 V
0 4389 R
0 -63 V
378 280 M
( 1) Cshow
1.000 UL
LTb
790 420 M
0 31 V
0 4421 R
0 -31 V
1333 420 M
0 31 V
0 4421 R
0 -31 V
1613 420 M
0 31 V
0 4421 R
0 -31 V
stroke
LTa
1745 420 M
0 4452 V
stroke
LTb
1745 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
( 10) Cshow
1.000 UL
LTb
2156 420 M
0 31 V
0 4421 R
0 -31 V
2700 420 M
0 31 V
0 4421 R
0 -31 V
2979 420 M
0 31 V
0 4421 R
0 -31 V
stroke
LTa
3112 420 M
0 4452 V
stroke
LTb
3112 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
( 100) Cshow
1.000 UL
LTb
3523 420 M
0 31 V
0 4421 R
0 -31 V
4067 420 M
0 31 V
0 4421 R
0 -31 V
4346 420 M
0 31 V
0 4421 R
0 -31 V
stroke
LTa
4479 420 M
0 4452 V
stroke
LTb
4479 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
( 1000) Cshow
1.000 UL
LTb
4890 420 M
0 31 V
0 4421 R
0 -31 V
5434 420 M
0 31 V
0 4421 R
0 -31 V
5713 420 M
0 31 V
0 4421 R
0 -31 V
stroke
LTa
5846 420 M
0 63 V
0 560 R
0 3829 V
stroke
LTb
5846 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
( 10000) Cshow
1.000 UL
LTb
6257 420 M
0 31 V
0 4421 R
0 -31 V
6801 420 M
0 31 V
0 4421 R
0 -31 V
stroke
378 4872 N
378 420 L
6584 0 V
0 4452 V
-6584 0 V
Z stroke
LCb setrgbcolor
140 2646 M
currentpoint gsave translate 90 rotate 0 0 M
(Instruction retired per cycles unhalted) Cshow
grestore
LTb
LCb setrgbcolor
3670 70 M
(Message Size \(bytes\)) Cshow
LTb
1.000 UP
1.000 UL
LTb
1.000 UL
LT0
378 4105 M
652 -194 V
503 -57 V
453 -988 V
431 -24 V
421 -7 V
416 -207 V
414 -182 V
412 22 V
412 702 V
412 33 V
412 -59 V
411 400 V
412 438 V
411 148 V
412 273 V
stroke
LT1
378 992 M
652 -4 V
503 518 V
453 -147 V
431 70 V
421 -139 V
416 -137 V
414 -97 V
412 6 V
412 605 V
412 -165 V
412 -128 V
411 193 V
412 21 V
411 79 V
412 -220 V
stroke
LT2
378 3964 M
652 -234 V
503 341 V
453 -288 V
431 280 V
421 -54 V
416 -254 V
414 -729 V
412 50 V
412 372 V
412 176 V
412 -207 V
411 436 V
412 309 V
411 0 V
412 22 V
stroke
LT3
378 2330 M
652 -448 V
503 -109 V
453 158 V
431 -166 V
421 253 V
416 -309 V
414 -181 V
412 -25 V
412 650 V
412 -228 V
412 -203 V
411 357 V
412 82 V
411 31 V
412 -268 V
stroke
LT0
LTb
6311 973 M
(Same core) Rshow
LT0
6395 973 M
399 0 V
-399 31 R
0 -62 V
399 62 R
0 -62 V
378 3837 M
0 527 V
347 3837 M
62 0 V
-62 527 R
62 0 V
621 -769 R
0 620 V
999 3595 M
62 0 V
-62 620 R
62 0 V
472 -476 R
0 228 V
-31 -228 R
62 0 V
-62 228 R
62 0 V
1986 2603 M
0 517 V
-31 -517 R
62 0 V
-62 517 R
62 0 V
400 -444 R
0 328 V
-31 -328 R
62 0 V
-62 328 R
62 0 V
390 -310 R
0 280 V
-31 -280 R
62 0 V
-62 280 R
62 0 V
385 -492 R
0 289 V
-31 -289 R
62 0 V
-62 289 R
62 0 V
383 -347 R
0 44 V
-31 -44 R
62 0 V
-62 44 R
62 0 V
381 -37 R
0 74 V
-31 -74 R
62 0 V
-62 74 R
62 0 V
381 599 R
0 131 V
-31 -131 R
62 0 V
-62 131 R
62 0 V
381 -79 R
0 92 V
-31 -92 R
62 0 V
-62 92 R
62 0 V
381 -137 R
0 67 V
-31 -67 R
62 0 V
-62 67 R
62 0 V
380 331 R
0 71 V
-31 -71 R
62 0 V
-62 71 R
62 0 V
381 351 R
0 101 V
-31 -101 R
62 0 V
-62 101 R
62 0 V
380 51 R
0 94 V
-31 -94 R
62 0 V
-62 94 R
62 0 V
381 162 R
0 127 V
-31 -127 R
62 0 V
-62 127 R
62 0 V
378 4105 Pls
1030 3911 Pls
1533 3854 Pls
1986 2866 Pls
2417 2842 Pls
2838 2835 Pls
3254 2628 Pls
3668 2446 Pls
4080 2468 Pls
4492 3170 Pls
4904 3203 Pls
5316 3144 Pls
5727 3544 Pls
6139 3982 Pls
6550 4130 Pls
6962 4403 Pls
6594 973 Pls
1.000 UL
LT1
LTb
6311 833 M
(Same computer) Rshow
LT1
6395 833 M
399 0 V
-399 31 R
0 -62 V
399 62 R
0 -62 V
378 983 M
0 19 V
347 983 M
62 0 V
-62 19 R
62 0 V
621 -33 R
0 37 V
999 969 M
62 0 V
-62 37 R
62 0 V
1533 420 M
0 2040 V
1502 420 M
62 0 V
-62 2040 R
62 0 V
1986 590 M
0 1470 V
1955 590 M
62 0 V
-62 1470 R
62 0 V
2417 526 M
0 1712 V
2386 526 M
62 0 V
-62 1712 R
62 0 V
2838 1028 M
0 515 V
-31 -515 R
62 0 V
-62 515 R
62 0 V
385 -456 R
0 132 V
-31 -132 R
62 0 V
-62 132 R
62 0 V
3668 977 M
0 157 V
3637 977 M
62 0 V
-62 157 R
62 0 V
381 -131 R
0 118 V
-31 -118 R
62 0 V
-62 118 R
62 0 V
381 512 R
0 67 V
-31 -67 R
62 0 V
-62 67 R
62 0 V
381 -247 R
0 99 V
-31 -99 R
62 0 V
-62 99 R
62 0 V
381 -220 R
0 84 V
-31 -84 R
62 0 V
-62 84 R
62 0 V
380 -112 R
0 518 V
-31 -518 R
62 0 V
-62 518 R
62 0 V
381 -519 R
0 561 V
-31 -561 R
62 0 V
-62 561 R
62 0 V
380 -336 R
0 276 V
-31 -276 R
62 0 V
-62 276 R
62 0 V
381 -437 R
0 159 V
-31 -159 R
62 0 V
-62 159 R
62 0 V
378 992 Crs
1030 988 Crs
1533 1506 Crs
1986 1359 Crs
2417 1429 Crs
2838 1290 Crs
3254 1153 Crs
3668 1056 Crs
4080 1062 Crs
4492 1667 Crs
4904 1502 Crs
5316 1374 Crs
5727 1567 Crs
6139 1588 Crs
6550 1667 Crs
6962 1447 Crs
6594 833 Crs
1.000 UL
LT2
LTb
6311 693 M
(Same die) Rshow
LT2
6395 693 M
399 0 V
-399 31 R
0 -62 V
399 62 R
0 -62 V
378 2937 M
0 1935 V
347 2937 M
62 0 V
347 4872 M
62 0 V
1030 2587 M
0 2140 V
999 2587 M
62 0 V
999 4727 M
62 0 V
1533 3337 M
0 1404 V
1502 3337 M
62 0 V
-62 1404 R
62 0 V
1986 2999 M
0 1497 V
1955 2999 M
62 0 V
-62 1497 R
62 0 V
2417 3444 M
0 1192 V
2386 3444 M
62 0 V
-62 1192 R
62 0 V
2838 3421 M
0 1136 V
2807 3421 M
62 0 V
-62 1136 R
62 0 V
3254 3119 M
0 1224 V
3223 3119 M
62 0 V
-62 1224 R
62 0 V
3668 2904 M
0 242 V
-31 -242 R
62 0 V
-62 242 R
62 0 V
381 -175 R
0 209 V
-31 -209 R
62 0 V
-62 209 R
62 0 V
381 208 R
0 121 V
-31 -121 R
62 0 V
-62 121 R
62 0 V
381 -48 R
0 323 V
-31 -323 R
62 0 V
-62 323 R
62 0 V
381 -433 R
0 133 V
-31 -133 R
62 0 V
-62 133 R
62 0 V
380 200 R
0 334 V
-31 -334 R
62 0 V
-62 334 R
62 0 V
381 -121 R
0 522 V
-31 -522 R
62 0 V
-62 522 R
62 0 V
380 -532 R
0 541 V
-31 -541 R
62 0 V
-62 541 R
62 0 V
381 -499 R
0 502 V
-31 -502 R
62 0 V
-62 502 R
62 0 V
378 3964 Star
1030 3730 Star
1533 4071 Star
1986 3783 Star
2417 4063 Star
2838 4009 Star
3254 3755 Star
3668 3026 Star
4080 3076 Star
4492 3448 Star
4904 3624 Star
5316 3417 Star
5727 3853 Star
6139 4162 Star
6550 4162 Star
6962 4184 Star
6594 693 Star
1.000 UL
LT3
LTb
6311 553 M
(Same processor) Rshow
LT3
6395 553 M
399 0 V
-399 31 R
0 -62 V
399 62 R
0 -62 V
378 1190 M
0 2136 V
347 1190 M
62 0 V
347 3326 M
62 0 V
1030 906 M
0 1845 V
999 906 M
62 0 V
999 2751 M
62 0 V
1533 1129 M
0 1240 V
1502 1129 M
62 0 V
-62 1240 R
62 0 V
1986 1069 M
0 1638 V
1955 1069 M
62 0 V
-62 1638 R
62 0 V
2417 1597 M
0 333 V
-31 -333 R
62 0 V
-62 333 R
62 0 V
390 -34 R
0 243 V
-31 -243 R
62 0 V
-62 243 R
62 0 V
385 -588 R
0 312 V
-31 -312 R
62 0 V
-62 312 R
62 0 V
383 -387 R
0 104 V
-31 -104 R
62 0 V
-62 104 R
62 0 V
381 -100 R
0 46 V
-31 -46 R
62 0 V
-62 46 R
62 0 V
381 597 R
0 59 V
-31 -59 R
62 0 V
-62 59 R
62 0 V
381 -322 R
0 130 V
-31 -130 R
62 0 V
-62 130 R
62 0 V
381 -309 R
0 81 V
-31 -81 R
62 0 V
-62 81 R
62 0 V
380 276 R
0 81 V
-31 -81 R
62 0 V
-62 81 R
62 0 V
381 6 R
0 72 V
-31 -72 R
62 0 V
-62 72 R
62 0 V
380 -47 R
0 84 V
-31 -84 R
62 0 V
-62 84 R
62 0 V
381 -343 R
0 67 V
-31 -67 R
62 0 V
-62 67 R
62 0 V
378 2330 Box
1030 1882 Box
1533 1773 Box
1986 1931 Box
2417 1765 Box
2838 2018 Box
3254 1709 Box
3668 1528 Box
4080 1503 Box
4492 2153 Box
4904 1925 Box
5316 1722 Box
5727 2079 Box
6139 2161 Box
6550 2192 Box
6962 1924 Box
6594 553 Box
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
