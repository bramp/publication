%!PS-Adobe-2.0
%%Title: Wed.26.03.08-11.57.32/msg_size_vs_Context Switch Voluntarily.eps
%%Creator: gnuplot 4.2 patchlevel 0
%%CreationDate: Fri Mar 28 13:08:35 2008
%%DocumentFonts: (atend)
%%BoundingBox: 50 50 554 770
%%Orientation: Landscape
%%Pages: (atend)
%%EndComments
%%BeginProlog
/gnudict 256 dict def
gnudict begin
%
% The following 6 true/false flags may be edited by hand if required
% The unit line width may also be changed
%
/Color true def
/Blacktext false def
/Solid false def
/Dashlength 1 def
/Landscape true def
/Level1 false def
/Rounded false def
/TransparentPatterns false def
/gnulinewidth 5.000 def
/userlinewidth gnulinewidth def
%
/vshift -46 def
/dl1 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul sub dup 0 le { pop 0.01 } if } if
} def
/dl2 {
  10.0 Dashlength mul mul
  Rounded { currentlinewidth 0.75 mul add } if
} def
/hpt_ 31.5 def
/vpt_ 31.5 def
/hpt hpt_ def
/vpt vpt_ def
Level1 {} {
/SDict 10 dict def
systemdict /pdfmark known not {
  userdict /pdfmark systemdict /cleartomark get put
} if
SDict begin [
  /Title (Wed.26.03.08-11.57.32/msg_size_vs_Context Switch Voluntarily.eps)
  /Subject (gnuplot plot)
  /Creator (gnuplot 4.2 patchlevel 0)
  /Author (Matthew Faulkner,,,)
%  /Producer (gnuplot)
%  /Keywords ()
  /CreationDate (Fri Mar 28 13:08:35 2008)
  /DOCINFO pdfmark
end
} ifelse
%
% Gnuplot Prolog Version 4.2 (August 2006)
%
/M {moveto} bind def
/L {lineto} bind def
/R {rmoveto} bind def
/V {rlineto} bind def
/N {newpath moveto} bind def
/Z {closepath} bind def
/C {setrgbcolor} bind def
/f {rlineto fill} bind def
/vpt2 vpt 2 mul def
/hpt2 hpt 2 mul def
/Lshow {currentpoint stroke M 0 vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Rshow {currentpoint stroke M dup stringwidth pop neg vshift R
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/Cshow {currentpoint stroke M dup stringwidth pop -2 div vshift R 
	Blacktext {gsave 0 setgray show grestore} {show} ifelse} def
/UP {dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
  /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def} def
/DL {Color {setrgbcolor Solid {pop []} if 0 setdash}
 {pop pop pop 0 setgray Solid {pop []} if 0 setdash} ifelse} def
/BL {stroke userlinewidth 2 mul setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/AL {stroke userlinewidth 2 div setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
/UL {dup gnulinewidth mul /userlinewidth exch def
	dup 1 lt {pop 1} if 10 mul /udl exch def} def
/PL {stroke userlinewidth setlinewidth
	Rounded {1 setlinejoin 1 setlinecap} if} def
% Default Line colors
/LCw {1 1 1} def
/LCb {0 0 0} def
/LCa {0 0 0} def
/LC0 {1 0 0} def
/LC1 {0 1 0} def
/LC2 {0 0 1} def
/LC3 {1 0 1} def
/LC4 {0 1 1} def
/LC5 {1 1 0} def
/LC6 {0 0 0} def
/LC7 {1 0.3 0} def
/LC8 {0.5 0.5 0.5} def
% Default Line Types
/LTw {PL [] 1 setgray} def
/LTb {BL [] LCb DL} def
/LTa {AL [1 udl mul 2 udl mul] 0 setdash LCa setrgbcolor} def
/LT0 {PL [] LC0 DL} def
/LT1 {PL [4 dl1 2 dl2] LC1 DL} def
/LT2 {PL [2 dl1 3 dl2] LC2 DL} def
/LT3 {PL [1 dl1 1.5 dl2] LC3 DL} def
/LT4 {PL [6 dl1 2 dl2 1 dl1 2 dl2] LC4 DL} def
/LT5 {PL [3 dl1 3 dl2 1 dl1 3 dl2] LC5 DL} def
/LT6 {PL [2 dl1 2 dl2 2 dl1 6 dl2] LC6 DL} def
/LT7 {PL [1 dl1 2 dl2 6 dl1 2 dl2 1 dl1 2 dl2] LC7 DL} def
/LT8 {PL [2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 2 dl2 2 dl1 4 dl2] LC8 DL} def
/Pnt {stroke [] 0 setdash gsave 1 setlinecap M 0 0 V stroke grestore} def
/Dia {stroke [] 0 setdash 2 copy vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke
  Pnt} def
/Pls {stroke [] 0 setdash vpt sub M 0 vpt2 V
  currentpoint stroke M
  hpt neg vpt neg R hpt2 0 V stroke
 } def
/Box {stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke
  Pnt} def
/Crs {stroke [] 0 setdash exch hpt sub exch vpt add M
  hpt2 vpt2 neg V currentpoint stroke M
  hpt2 neg 0 R hpt2 vpt2 V stroke} def
/TriU {stroke [] 0 setdash 2 copy vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke
  Pnt} def
/Star {2 copy Pls Crs} def
/BoxF {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath fill} def
/TriUF {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath fill} def
/TriD {stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke
  Pnt} def
/TriDF {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath fill} def
/DiaF {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath fill} def
/Pent {stroke [] 0 setdash 2 copy gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore Pnt} def
/PentF {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath fill grestore} def
/Circle {stroke [] 0 setdash 2 copy
  hpt 0 360 arc stroke Pnt} def
/CircleF {stroke [] 0 setdash hpt 0 360 arc fill} def
/C0 {BL [] 0 setdash 2 copy moveto vpt 90 450 arc} bind def
/C1 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C2 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C3 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C4 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C5 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc
	2 copy moveto
	2 copy vpt 180 270 arc closepath fill
	vpt 0 360 arc} bind def
/C6 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C7 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 270 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C8 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C9 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 270 450 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C10 {BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
	2 copy moveto
	2 copy vpt 90 180 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C11 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 180 arc closepath fill
	2 copy moveto
	2 copy vpt 270 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C12 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C13 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 0 90 arc closepath fill
	2 copy moveto
	2 copy vpt 180 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/C14 {BL [] 0 setdash 2 copy moveto
	2 copy vpt 90 360 arc closepath fill
	vpt 0 360 arc} bind def
/C15 {BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
	vpt 0 360 arc closepath} bind def
/Rec {newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
	neg 0 rlineto closepath} bind def
/Square {dup Rec} bind def
/Bsquare {vpt sub exch vpt sub exch vpt2 Square} bind def
/S0 {BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare} bind def
/S1 {BL [] 0 setdash 2 copy vpt Square fill Bsquare} bind def
/S2 {BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S3 {BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare} bind def
/S4 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S5 {BL [] 0 setdash 2 copy 2 copy vpt Square fill
	exch vpt sub exch vpt sub vpt Square fill Bsquare} bind def
/S6 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S7 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S8 {BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare} bind def
/S9 {BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare} bind def
/S10 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
	Bsquare} bind def
/S11 {BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
	Bsquare} bind def
/S12 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare} bind def
/S13 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy vpt Square fill Bsquare} bind def
/S14 {BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
	2 copy exch vpt sub exch vpt Square fill Bsquare} bind def
/S15 {BL [] 0 setdash 2 copy Bsquare fill Bsquare} bind def
/D0 {gsave translate 45 rotate 0 0 S0 stroke grestore} bind def
/D1 {gsave translate 45 rotate 0 0 S1 stroke grestore} bind def
/D2 {gsave translate 45 rotate 0 0 S2 stroke grestore} bind def
/D3 {gsave translate 45 rotate 0 0 S3 stroke grestore} bind def
/D4 {gsave translate 45 rotate 0 0 S4 stroke grestore} bind def
/D5 {gsave translate 45 rotate 0 0 S5 stroke grestore} bind def
/D6 {gsave translate 45 rotate 0 0 S6 stroke grestore} bind def
/D7 {gsave translate 45 rotate 0 0 S7 stroke grestore} bind def
/D8 {gsave translate 45 rotate 0 0 S8 stroke grestore} bind def
/D9 {gsave translate 45 rotate 0 0 S9 stroke grestore} bind def
/D10 {gsave translate 45 rotate 0 0 S10 stroke grestore} bind def
/D11 {gsave translate 45 rotate 0 0 S11 stroke grestore} bind def
/D12 {gsave translate 45 rotate 0 0 S12 stroke grestore} bind def
/D13 {gsave translate 45 rotate 0 0 S13 stroke grestore} bind def
/D14 {gsave translate 45 rotate 0 0 S14 stroke grestore} bind def
/D15 {gsave translate 45 rotate 0 0 S15 stroke grestore} bind def
/DiaE {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V closepath stroke} def
/BoxE {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V closepath stroke} def
/TriUE {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V closepath stroke} def
/TriDE {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V closepath stroke} def
/PentE {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  closepath stroke grestore} def
/CircE {stroke [] 0 setdash 
  hpt 0 360 arc stroke} def
/Opaque {gsave closepath 1 setgray fill grestore 0 setgray closepath} def
/DiaW {stroke [] 0 setdash vpt add M
  hpt neg vpt neg V hpt vpt neg V
  hpt vpt V hpt neg vpt V Opaque stroke} def
/BoxW {stroke [] 0 setdash exch hpt sub exch vpt add M
  0 vpt2 neg V hpt2 0 V 0 vpt2 V
  hpt2 neg 0 V Opaque stroke} def
/TriUW {stroke [] 0 setdash vpt 1.12 mul add M
  hpt neg vpt -1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt 1.62 mul V Opaque stroke} def
/TriDW {stroke [] 0 setdash vpt 1.12 mul sub M
  hpt neg vpt 1.62 mul V
  hpt 2 mul 0 V
  hpt neg vpt -1.62 mul V Opaque stroke} def
/PentW {stroke [] 0 setdash gsave
  translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
  Opaque stroke grestore} def
/CircW {stroke [] 0 setdash 
  hpt 0 360 arc Opaque stroke} def
/BoxFill {gsave Rec 1 setgray fill grestore} def
/Density {
  /Fillden exch def
  currentrgbcolor
  /ColB exch def /ColG exch def /ColR exch def
  /ColR ColR Fillden mul Fillden sub 1 add def
  /ColG ColG Fillden mul Fillden sub 1 add def
  /ColB ColB Fillden mul Fillden sub 1 add def
  ColR ColG ColB setrgbcolor} def
/BoxColFill {gsave Rec PolyFill} def
/PolyFill {gsave Density fill grestore grestore} def
/h {rlineto rlineto rlineto gsave fill grestore} bind def
%
% PostScript Level 1 Pattern Fill routine for rectangles
% Usage: x y w h s a XX PatternFill
%	x,y = lower left corner of box to be filled
%	w,h = width and height of box
%	  a = angle in degrees between lines and x-axis
%	 XX = 0/1 for no/yes cross-hatch
%
/PatternFill {gsave /PFa [ 9 2 roll ] def
  PFa 0 get PFa 2 get 2 div add PFa 1 get PFa 3 get 2 div add translate
  PFa 2 get -2 div PFa 3 get -2 div PFa 2 get PFa 3 get Rec
  gsave 1 setgray fill grestore clip
  currentlinewidth 0.5 mul setlinewidth
  /PFs PFa 2 get dup mul PFa 3 get dup mul add sqrt def
  0 0 M PFa 5 get rotate PFs -2 div dup translate
  0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 M 0 PFs V} for
  0 PFa 6 get ne {
	0 1 PFs PFa 4 get div 1 add floor cvi
	{PFa 4 get mul 0 2 1 roll M PFs 0 V} for
 } if
  stroke grestore} def
%
/languagelevel where
 {pop languagelevel} {1} ifelse
 2 lt
	{/InterpretLevel1 true def}
	{/InterpretLevel1 Level1 def}
 ifelse
%
% PostScript level 2 pattern fill definitions
%
/Level2PatternFill {
/Tile8x8 {/PaintType 2 /PatternType 1 /TilingType 1 /BBox [0 0 8 8] /XStep 8 /YStep 8}
	bind def
/KeepColor {currentrgbcolor [/Pattern /DeviceRGB] setcolorspace} bind def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke} 
>> matrix makepattern
/Pat1 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 8 8 L 0 8 M 8 0 L stroke
	0 4 M 4 8 L 8 4 L 4 0 L 0 4 L stroke}
>> matrix makepattern
/Pat2 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 0 M 0 8 L
	8 8 L 8 0 L 0 0 L fill}
>> matrix makepattern
/Pat3 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 8 M 8 -4 L
	0 12 M 12 0 L stroke}
>> matrix makepattern
/Pat4 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -4 0 M 8 12 L
	0 -4 M 12 8 L stroke}
>> matrix makepattern
/Pat5 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 8 M 4 -4 L
	0 12 M 8 -4 L 4 12 M 10 0 L stroke}
>> matrix makepattern
/Pat6 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop -2 0 M 4 12 L
	0 -4 M 8 12 L 4 -4 M 10 8 L stroke}
>> matrix makepattern
/Pat7 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 8 -2 M -4 4 L
	12 0 M -4 8 L 12 4 M 0 10 L stroke}
>> matrix makepattern
/Pat8 exch def
<< Tile8x8
 /PaintProc {0.5 setlinewidth pop 0 -2 M 12 4 L
	-4 0 M 12 8 L -4 4 M 8 10 L stroke}
>> matrix makepattern
/Pat9 exch def
/Pattern1 {PatternBgnd KeepColor Pat1 setpattern} bind def
/Pattern2 {PatternBgnd KeepColor Pat2 setpattern} bind def
/Pattern3 {PatternBgnd KeepColor Pat3 setpattern} bind def
/Pattern4 {PatternBgnd KeepColor Landscape {Pat5} {Pat4} ifelse setpattern} bind def
/Pattern5 {PatternBgnd KeepColor Landscape {Pat4} {Pat5} ifelse setpattern} bind def
/Pattern6 {PatternBgnd KeepColor Landscape {Pat9} {Pat6} ifelse setpattern} bind def
/Pattern7 {PatternBgnd KeepColor Landscape {Pat8} {Pat7} ifelse setpattern} bind def
} def
%
%
%End of PostScript Level 2 code
%
/PatternBgnd {
  TransparentPatterns {} {gsave 1 setgray fill grestore} ifelse
} def
%
% Substitute for Level 2 pattern fill codes with
% grayscale if Level 2 support is not selected.
%
/Level1PatternFill {
/Pattern1 {0.250 Density} bind def
/Pattern2 {0.500 Density} bind def
/Pattern3 {0.750 Density} bind def
/Pattern4 {0.125 Density} bind def
/Pattern5 {0.375 Density} bind def
/Pattern6 {0.625 Density} bind def
/Pattern7 {0.875 Density} bind def
} def
%
% Now test for support of Level 2 code
%
Level1 {Level1PatternFill} {Level2PatternFill} ifelse
%
/Symbol-Oblique /Symbol findfont [1 0 .167 1 0 0] makefont
dup length dict begin {1 index /FID eq {pop pop} {def} ifelse} forall
currentdict end definefont pop
end
%%EndProlog
%%Page: 1 1
gnudict begin
gsave
50 50 translate
0.100 0.100 scale
90 rotate
0 -5040 translate
0 setgray
newpath
(Helvetica) findfont 140 scalefont setfont
1.000 UL
LTb
1.000 UL
LTa
1050 559 M
5912 0 V
stroke
LTb
1050 559 M
63 0 V
5849 0 R
-63 0 V
966 559 M
( 0) Rshow
1.000 UL
LTb
1.000 UL
LTa
1050 1385 M
5912 0 V
stroke
LTb
1050 1385 M
63 0 V
5849 0 R
-63 0 V
-5933 0 R
( 500000) Rshow
1.000 UL
LTb
1.000 UL
LTa
1050 2211 M
5912 0 V
stroke
LTb
1050 2211 M
63 0 V
5849 0 R
-63 0 V
-5933 0 R
( 1e+06) Rshow
1.000 UL
LTb
1.000 UL
LTa
1050 3037 M
5912 0 V
stroke
LTb
1050 3037 M
63 0 V
5849 0 R
-63 0 V
-5933 0 R
( 1.5e+06) Rshow
1.000 UL
LTb
1.000 UL
LTa
1050 3863 M
5912 0 V
stroke
LTb
1050 3863 M
63 0 V
5849 0 R
-63 0 V
-5933 0 R
( 2e+06) Rshow
1.000 UL
LTb
1.000 UL
LTa
1050 4689 M
4085 0 V
1743 0 R
84 0 V
stroke
LTb
1050 4689 M
63 0 V
5849 0 R
-63 0 V
-5933 0 R
( 2.5e+06) Rshow
1.000 UL
LTb
1.000 UL
LTa
1050 420 M
0 4452 V
stroke
LTb
1050 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
( 1) Cshow
1.000 UL
LTb
1420 420 M
0 31 V
0 4421 R
0 -31 V
1908 420 M
0 31 V
0 4421 R
0 -31 V
2159 420 M
0 31 V
0 4421 R
0 -31 V
stroke
LTa
2277 420 M
0 4452 V
stroke
LTb
2277 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
( 10) Cshow
1.000 UL
LTb
2647 420 M
0 31 V
0 4421 R
0 -31 V
3135 420 M
0 31 V
0 4421 R
0 -31 V
3386 420 M
0 31 V
0 4421 R
0 -31 V
stroke
LTa
3505 420 M
0 4452 V
stroke
LTb
3505 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
( 100) Cshow
1.000 UL
LTb
3874 420 M
0 31 V
0 4421 R
0 -31 V
4363 420 M
0 31 V
0 4421 R
0 -31 V
4613 420 M
0 31 V
0 4421 R
0 -31 V
stroke
LTa
4732 420 M
0 4452 V
stroke
LTb
4732 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
( 1000) Cshow
1.000 UL
LTb
5102 420 M
0 31 V
0 4421 R
0 -31 V
5590 420 M
0 31 V
0 4421 R
0 -31 V
5841 420 M
0 31 V
0 4421 R
0 -31 V
stroke
LTa
5960 420 M
0 3829 V
0 560 R
0 63 V
stroke
LTb
5960 420 M
0 63 V
0 4389 R
0 -63 V
0 -4529 R
( 10000) Cshow
1.000 UL
LTb
6329 420 M
0 31 V
0 4421 R
0 -31 V
6818 420 M
0 31 V
0 4421 R
0 -31 V
stroke
1050 4872 N
0 -4452 V
5912 0 V
0 4452 V
-5912 0 V
Z stroke
LCb setrgbcolor
140 2646 M
currentpoint gsave translate 90 rotate 0 0 M
(Voluntarily Context Switchs) Cshow
grestore
LTb
LCb setrgbcolor
4006 70 M
(Message Size \(bytes\)) Cshow
LTb
1.000 UP
1.000 UL
LTb
1.000 UL
LT0
1050 563 M
586 17 V
451 14 V
407 1493 V
387 321 V
378 94 V
373 -95 V
372 -162 V
370 40 V
370 724 V
370 -771 V
370 -515 V
369 -411 V
6223 982 L
6592 797 L
6962 684 L
stroke
LT1
1050 810 M
586 1 V
451 -31 V
407 82 V
387 -13 V
378 -5 V
373 36 V
372 20 V
370 29 V
370 1444 V
370 -987 V
370 -189 V
369 177 V
370 -181 V
369 -139 V
6962 923 L
stroke
LT2
1050 910 M
586 90 V
2087 802 L
407 252 V
2881 939 L
378 -17 V
373 199 V
372 87 V
370 -106 V
370 3143 V
5114 2772 L
370 -896 V
369 298 V
370 -214 V
369 -267 V
370 -66 V
stroke
LT3
1050 776 M
586 43 V
451 -24 V
407 59 V
387 18 V
378 16 V
373 25 V
372 37 V
370 51 V
370 1532 V
5114 1477 L
370 -209 V
369 170 V
370 -168 V
369 -146 V
6962 956 L
stroke
LT0
LTb
6311 4739 M
(Same core) Rshow
LT0
6395 4739 M
399 0 V
-399 31 R
0 -62 V
399 62 R
0 -62 V
1050 551 M
0 24 V
-31 -24 R
62 0 V
-62 24 R
62 0 V
555 -29 R
0 68 V
-31 -68 R
62 0 V
-62 68 R
62 0 V
420 -28 R
0 17 V
-31 -17 R
62 0 V
-62 17 R
62 0 V
376 788 R
0 1392 V
2463 1391 M
62 0 V
-62 1392 R
62 0 V
356 -866 R
0 981 V
-31 -981 R
62 0 V
-62 981 R
62 0 V
347 -753 R
0 714 V
-31 -714 R
62 0 V
-62 714 R
62 0 V
342 -791 R
0 679 V
-31 -679 R
62 0 V
-62 679 R
62 0 V
341 -767 R
0 530 V
-31 -530 R
62 0 V
-62 530 R
62 0 V
339 -500 R
0 551 V
-31 -551 R
62 0 V
-62 551 R
62 0 V
339 91 R
0 713 V
-31 -713 R
62 0 V
-62 713 R
62 0 V
5114 1949 M
0 578 V
-31 -578 R
62 0 V
-62 578 R
62 0 V
5484 1515 M
0 416 V
-31 -416 R
62 0 V
-62 416 R
62 0 V
338 -748 R
0 258 V
-31 -258 R
62 0 V
-62 258 R
62 0 V
6223 913 M
0 139 V
6192 913 M
62 0 V
-62 139 R
62 0 V
6592 764 M
0 66 V
-31 -66 R
62 0 V
-62 66 R
62 0 V
6962 670 M
0 29 V
-31 -29 R
62 0 V
-62 29 R
62 0 V
1050 563 Pls
1636 580 Pls
2087 594 Pls
2494 2087 Pls
2881 2408 Pls
3259 2502 Pls
3632 2407 Pls
4004 2245 Pls
4374 2285 Pls
4744 3009 Pls
5114 2238 Pls
5484 1723 Pls
5853 1312 Pls
6223 982 Pls
6592 797 Pls
6962 684 Pls
6594 4739 Pls
1.000 UL
LT1
LTb
6311 4599 M
(Same computer) Rshow
LT1
6395 4599 M
399 0 V
-399 31 R
0 -62 V
399 62 R
0 -62 V
1050 537 M
0 545 V
1019 537 M
62 0 V
-62 545 R
62 0 V
1636 539 M
0 543 V
1605 539 M
62 0 V
-62 543 R
62 0 V
2087 524 M
0 511 V
2056 524 M
62 0 V
-62 511 R
62 0 V
2494 583 M
0 559 V
2463 583 M
62 0 V
-62 559 R
62 0 V
2881 572 M
0 555 V
2850 572 M
62 0 V
-62 555 R
62 0 V
3259 585 M
0 518 V
3228 585 M
62 0 V
-62 518 R
62 0 V
3632 604 M
0 553 V
3601 604 M
62 0 V
-62 553 R
62 0 V
4004 593 M
0 614 V
3973 593 M
62 0 V
-62 614 R
62 0 V
4374 608 M
0 642 V
4343 608 M
62 0 V
-62 642 R
62 0 V
339 1024 R
0 198 V
-31 -198 R
62 0 V
-62 198 R
62 0 V
5114 1303 M
0 165 V
-31 -165 R
62 0 V
-62 165 R
62 0 V
339 -436 R
0 331 V
-31 -331 R
62 0 V
-62 331 R
62 0 V
338 -46 R
0 114 V
-31 -114 R
62 0 V
-62 114 R
62 0 V
339 -309 R
0 141 V
-31 -141 R
62 0 V
-62 141 R
62 0 V
6592 955 M
0 197 V
6561 955 M
62 0 V
-62 197 R
62 0 V
6962 786 M
0 274 V
6931 786 M
62 0 V
-62 274 R
62 0 V
1050 810 Crs
1636 811 Crs
2087 780 Crs
2494 862 Crs
2881 849 Crs
3259 844 Crs
3632 880 Crs
4004 900 Crs
4374 929 Crs
4744 2373 Crs
5114 1386 Crs
5484 1197 Crs
5853 1374 Crs
6223 1193 Crs
6592 1054 Crs
6962 923 Crs
6594 4599 Crs
1.000 UL
LT2
LTb
6311 4459 M
(Same die) Rshow
LT2
6395 4459 M
399 0 V
-399 31 R
0 -62 V
399 62 R
0 -62 V
1050 420 M
0 981 V
1019 420 M
62 0 V
-62 981 R
62 0 V
1636 479 M
0 1042 V
1605 479 M
62 0 V
-62 1042 R
62 0 V
2087 432 M
0 739 V
2056 432 M
62 0 V
-62 739 R
62 0 V
2494 607 M
0 895 V
2463 607 M
62 0 V
-62 895 R
62 0 V
2881 543 M
0 792 V
2850 543 M
62 0 V
-62 792 R
62 0 V
3259 479 M
0 885 V
3228 479 M
62 0 V
-62 885 R
62 0 V
3632 607 M
0 1029 V
3601 607 M
62 0 V
-62 1029 R
62 0 V
4004 609 M
0 1198 V
3973 609 M
62 0 V
-62 1198 R
62 0 V
4374 523 M
0 1158 V
4343 523 M
62 0 V
-62 1158 R
62 0 V
339 1937 R
0 1254 V
4713 3618 M
62 0 V
-62 1254 R
62 0 V
5114 2401 M
0 742 V
-31 -742 R
62 0 V
-62 742 R
62 0 V
5484 1620 M
0 513 V
-31 -513 R
62 0 V
-62 513 R
62 0 V
338 -88 R
0 259 V
-31 -259 R
62 0 V
-62 259 R
62 0 V
339 -469 R
0 249 V
-31 -249 R
62 0 V
-62 249 R
62 0 V
338 -608 R
0 434 V
-31 -434 R
62 0 V
-62 434 R
62 0 V
339 -436 R
0 305 V
-31 -305 R
62 0 V
-62 305 R
62 0 V
1050 910 Star
1636 1000 Star
2087 802 Star
2494 1054 Star
2881 939 Star
3259 922 Star
3632 1121 Star
4004 1208 Star
4374 1102 Star
4744 4245 Star
5114 2772 Star
5484 1876 Star
5853 2174 Star
6223 1960 Star
6592 1693 Star
6962 1627 Star
6594 4459 Star
1.000 UL
LT3
LTb
6311 4319 M
(Same processor) Rshow
LT3
6395 4319 M
399 0 V
-399 31 R
0 -62 V
399 62 R
0 -62 V
1050 442 M
0 669 V
1019 442 M
62 0 V
-62 669 R
62 0 V
1636 471 M
0 696 V
1605 471 M
62 0 V
-62 696 R
62 0 V
2087 461 M
0 669 V
2056 461 M
62 0 V
-62 669 R
62 0 V
2494 500 M
0 709 V
2463 500 M
62 0 V
-62 709 R
62 0 V
2881 549 M
0 646 V
2850 549 M
62 0 V
-62 646 R
62 0 V
3259 564 M
0 647 V
3228 564 M
62 0 V
-62 647 R
62 0 V
3632 570 M
0 687 V
3601 570 M
62 0 V
-62 687 R
62 0 V
4004 579 M
0 742 V
3973 579 M
62 0 V
-62 742 R
62 0 V
4374 641 M
0 720 V
4343 641 M
62 0 V
-62 720 R
62 0 V
339 1078 R
0 189 V
-31 -189 R
62 0 V
-62 189 R
62 0 V
5114 1365 M
0 224 V
-31 -224 R
62 0 V
-62 224 R
62 0 V
339 -541 R
0 440 V
-31 -440 R
62 0 V
-62 440 R
62 0 V
338 -105 R
0 110 V
-31 -110 R
62 0 V
-62 110 R
62 0 V
339 -322 R
0 197 V
-31 -197 R
62 0 V
-62 197 R
62 0 V
6592 961 M
0 325 V
6561 961 M
62 0 V
-62 325 R
62 0 V
6962 777 M
0 358 V
6931 777 M
62 0 V
-62 358 R
62 0 V
1050 776 Box
1636 819 Box
2087 795 Box
2494 854 Box
2881 872 Box
3259 888 Box
3632 913 Box
4004 950 Box
4374 1001 Box
4744 2533 Box
5114 1477 Box
5484 1268 Box
5853 1438 Box
6223 1270 Box
6592 1124 Box
6962 956 Box
6594 4319 Box
1.000 UP
1.000 UL
LTb
stroke
grestore
end
showpage
%%Trailer
%%DocumentFonts: Helvetica
%%Pages: 1
